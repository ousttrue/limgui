-- this is generated by luajitffi
local ffi = require('ffi')
---@type Table<string, integer>
local C = ffi.C

local M = {
    libs = {},
    cache = {},
}

-- cdef
require('imgui_ffi.cdef.vcruntime')
require('imgui_ffi.cdef.corecrt_wstdio')
require('imgui_ffi.cdef.vadefs')
require('imgui_ffi.cdef.gl')
require('imgui_ffi.cdef.imgui')
require('imgui_ffi.cdef.imgui_impl_glfw')
require('imgui_ffi.cdef.imgui_impl_opengl3')
require('imgui_ffi.cdef.imstb_textedit')
require('imgui_ffi.cdef.imgui_internal')
M.enums = {
    ImGuiWindowFlags_ = {
        ImGuiWindowFlags_None = C.ImGuiWindowFlags_None,
        ImGuiWindowFlags_NoTitleBar = C.ImGuiWindowFlags_NoTitleBar,
        ImGuiWindowFlags_NoResize = C.ImGuiWindowFlags_NoResize,
        ImGuiWindowFlags_NoMove = C.ImGuiWindowFlags_NoMove,
        ImGuiWindowFlags_NoScrollbar = C.ImGuiWindowFlags_NoScrollbar,
        ImGuiWindowFlags_NoScrollWithMouse = C.ImGuiWindowFlags_NoScrollWithMouse,
        ImGuiWindowFlags_NoCollapse = C.ImGuiWindowFlags_NoCollapse,
        ImGuiWindowFlags_AlwaysAutoResize = C.ImGuiWindowFlags_AlwaysAutoResize,
        ImGuiWindowFlags_NoBackground = C.ImGuiWindowFlags_NoBackground,
        ImGuiWindowFlags_NoSavedSettings = C.ImGuiWindowFlags_NoSavedSettings,
        ImGuiWindowFlags_NoMouseInputs = C.ImGuiWindowFlags_NoMouseInputs,
        ImGuiWindowFlags_MenuBar = C.ImGuiWindowFlags_MenuBar,
        ImGuiWindowFlags_HorizontalScrollbar = C.ImGuiWindowFlags_HorizontalScrollbar,
        ImGuiWindowFlags_NoFocusOnAppearing = C.ImGuiWindowFlags_NoFocusOnAppearing,
        ImGuiWindowFlags_NoBringToFrontOnFocus = C.ImGuiWindowFlags_NoBringToFrontOnFocus,
        ImGuiWindowFlags_AlwaysVerticalScrollbar = C.ImGuiWindowFlags_AlwaysVerticalScrollbar,
        ImGuiWindowFlags_AlwaysHorizontalScrollbar = C.ImGuiWindowFlags_AlwaysHorizontalScrollbar,
        ImGuiWindowFlags_AlwaysUseWindowPadding = C.ImGuiWindowFlags_AlwaysUseWindowPadding,
        ImGuiWindowFlags_NoNavInputs = C.ImGuiWindowFlags_NoNavInputs,
        ImGuiWindowFlags_NoNavFocus = C.ImGuiWindowFlags_NoNavFocus,
        ImGuiWindowFlags_UnsavedDocument = C.ImGuiWindowFlags_UnsavedDocument,
        ImGuiWindowFlags_NoDocking = C.ImGuiWindowFlags_NoDocking,
        ImGuiWindowFlags_NoNav = C.ImGuiWindowFlags_NoNav,
        ImGuiWindowFlags_NoDecoration = C.ImGuiWindowFlags_NoDecoration,
        ImGuiWindowFlags_NoInputs = C.ImGuiWindowFlags_NoInputs,
        ImGuiWindowFlags_NavFlattened = C.ImGuiWindowFlags_NavFlattened,
        ImGuiWindowFlags_ChildWindow = C.ImGuiWindowFlags_ChildWindow,
        ImGuiWindowFlags_Tooltip = C.ImGuiWindowFlags_Tooltip,
        ImGuiWindowFlags_Popup = C.ImGuiWindowFlags_Popup,
        ImGuiWindowFlags_Modal = C.ImGuiWindowFlags_Modal,
        ImGuiWindowFlags_ChildMenu = C.ImGuiWindowFlags_ChildMenu,
        ImGuiWindowFlags_DockNodeHost = C.ImGuiWindowFlags_DockNodeHost,
    },
    ImGuiInputTextFlags_ = {
        ImGuiInputTextFlags_None = C.ImGuiInputTextFlags_None,
        ImGuiInputTextFlags_CharsDecimal = C.ImGuiInputTextFlags_CharsDecimal,
        ImGuiInputTextFlags_CharsHexadecimal = C.ImGuiInputTextFlags_CharsHexadecimal,
        ImGuiInputTextFlags_CharsUppercase = C.ImGuiInputTextFlags_CharsUppercase,
        ImGuiInputTextFlags_CharsNoBlank = C.ImGuiInputTextFlags_CharsNoBlank,
        ImGuiInputTextFlags_AutoSelectAll = C.ImGuiInputTextFlags_AutoSelectAll,
        ImGuiInputTextFlags_EnterReturnsTrue = C.ImGuiInputTextFlags_EnterReturnsTrue,
        ImGuiInputTextFlags_CallbackCompletion = C.ImGuiInputTextFlags_CallbackCompletion,
        ImGuiInputTextFlags_CallbackHistory = C.ImGuiInputTextFlags_CallbackHistory,
        ImGuiInputTextFlags_CallbackAlways = C.ImGuiInputTextFlags_CallbackAlways,
        ImGuiInputTextFlags_CallbackCharFilter = C.ImGuiInputTextFlags_CallbackCharFilter,
        ImGuiInputTextFlags_AllowTabInput = C.ImGuiInputTextFlags_AllowTabInput,
        ImGuiInputTextFlags_CtrlEnterForNewLine = C.ImGuiInputTextFlags_CtrlEnterForNewLine,
        ImGuiInputTextFlags_NoHorizontalScroll = C.ImGuiInputTextFlags_NoHorizontalScroll,
        ImGuiInputTextFlags_AlwaysOverwrite = C.ImGuiInputTextFlags_AlwaysOverwrite,
        ImGuiInputTextFlags_ReadOnly = C.ImGuiInputTextFlags_ReadOnly,
        ImGuiInputTextFlags_Password = C.ImGuiInputTextFlags_Password,
        ImGuiInputTextFlags_NoUndoRedo = C.ImGuiInputTextFlags_NoUndoRedo,
        ImGuiInputTextFlags_CharsScientific = C.ImGuiInputTextFlags_CharsScientific,
        ImGuiInputTextFlags_CallbackResize = C.ImGuiInputTextFlags_CallbackResize,
        ImGuiInputTextFlags_CallbackEdit = C.ImGuiInputTextFlags_CallbackEdit,
        ImGuiInputTextFlags_AlwaysInsertMode = C.ImGuiInputTextFlags_AlwaysInsertMode,
    },
    ImGuiTreeNodeFlags_ = {
        ImGuiTreeNodeFlags_None = C.ImGuiTreeNodeFlags_None,
        ImGuiTreeNodeFlags_Selected = C.ImGuiTreeNodeFlags_Selected,
        ImGuiTreeNodeFlags_Framed = C.ImGuiTreeNodeFlags_Framed,
        ImGuiTreeNodeFlags_AllowItemOverlap = C.ImGuiTreeNodeFlags_AllowItemOverlap,
        ImGuiTreeNodeFlags_NoTreePushOnOpen = C.ImGuiTreeNodeFlags_NoTreePushOnOpen,
        ImGuiTreeNodeFlags_NoAutoOpenOnLog = C.ImGuiTreeNodeFlags_NoAutoOpenOnLog,
        ImGuiTreeNodeFlags_DefaultOpen = C.ImGuiTreeNodeFlags_DefaultOpen,
        ImGuiTreeNodeFlags_OpenOnDoubleClick = C.ImGuiTreeNodeFlags_OpenOnDoubleClick,
        ImGuiTreeNodeFlags_OpenOnArrow = C.ImGuiTreeNodeFlags_OpenOnArrow,
        ImGuiTreeNodeFlags_Leaf = C.ImGuiTreeNodeFlags_Leaf,
        ImGuiTreeNodeFlags_Bullet = C.ImGuiTreeNodeFlags_Bullet,
        ImGuiTreeNodeFlags_FramePadding = C.ImGuiTreeNodeFlags_FramePadding,
        ImGuiTreeNodeFlags_SpanAvailWidth = C.ImGuiTreeNodeFlags_SpanAvailWidth,
        ImGuiTreeNodeFlags_SpanFullWidth = C.ImGuiTreeNodeFlags_SpanFullWidth,
        ImGuiTreeNodeFlags_NavLeftJumpsBackHere = C.ImGuiTreeNodeFlags_NavLeftJumpsBackHere,
        ImGuiTreeNodeFlags_CollapsingHeader = C.ImGuiTreeNodeFlags_CollapsingHeader,
    },
    ImGuiPopupFlags_ = {
        ImGuiPopupFlags_None = C.ImGuiPopupFlags_None,
        ImGuiPopupFlags_MouseButtonLeft = C.ImGuiPopupFlags_MouseButtonLeft,
        ImGuiPopupFlags_MouseButtonRight = C.ImGuiPopupFlags_MouseButtonRight,
        ImGuiPopupFlags_MouseButtonMiddle = C.ImGuiPopupFlags_MouseButtonMiddle,
        ImGuiPopupFlags_MouseButtonMask_ = C.ImGuiPopupFlags_MouseButtonMask_,
        ImGuiPopupFlags_MouseButtonDefault_ = C.ImGuiPopupFlags_MouseButtonDefault_,
        ImGuiPopupFlags_NoOpenOverExistingPopup = C.ImGuiPopupFlags_NoOpenOverExistingPopup,
        ImGuiPopupFlags_NoOpenOverItems = C.ImGuiPopupFlags_NoOpenOverItems,
        ImGuiPopupFlags_AnyPopupId = C.ImGuiPopupFlags_AnyPopupId,
        ImGuiPopupFlags_AnyPopupLevel = C.ImGuiPopupFlags_AnyPopupLevel,
        ImGuiPopupFlags_AnyPopup = C.ImGuiPopupFlags_AnyPopup,
    },
    ImGuiSelectableFlags_ = {
        ImGuiSelectableFlags_None = C.ImGuiSelectableFlags_None,
        ImGuiSelectableFlags_DontClosePopups = C.ImGuiSelectableFlags_DontClosePopups,
        ImGuiSelectableFlags_SpanAllColumns = C.ImGuiSelectableFlags_SpanAllColumns,
        ImGuiSelectableFlags_AllowDoubleClick = C.ImGuiSelectableFlags_AllowDoubleClick,
        ImGuiSelectableFlags_Disabled = C.ImGuiSelectableFlags_Disabled,
        ImGuiSelectableFlags_AllowItemOverlap = C.ImGuiSelectableFlags_AllowItemOverlap,
    },
    ImGuiComboFlags_ = {
        ImGuiComboFlags_None = C.ImGuiComboFlags_None,
        ImGuiComboFlags_PopupAlignLeft = C.ImGuiComboFlags_PopupAlignLeft,
        ImGuiComboFlags_HeightSmall = C.ImGuiComboFlags_HeightSmall,
        ImGuiComboFlags_HeightRegular = C.ImGuiComboFlags_HeightRegular,
        ImGuiComboFlags_HeightLarge = C.ImGuiComboFlags_HeightLarge,
        ImGuiComboFlags_HeightLargest = C.ImGuiComboFlags_HeightLargest,
        ImGuiComboFlags_NoArrowButton = C.ImGuiComboFlags_NoArrowButton,
        ImGuiComboFlags_NoPreview = C.ImGuiComboFlags_NoPreview,
        ImGuiComboFlags_HeightMask_ = C.ImGuiComboFlags_HeightMask_,
    },
    ImGuiTabBarFlags_ = {
        ImGuiTabBarFlags_None = C.ImGuiTabBarFlags_None,
        ImGuiTabBarFlags_Reorderable = C.ImGuiTabBarFlags_Reorderable,
        ImGuiTabBarFlags_AutoSelectNewTabs = C.ImGuiTabBarFlags_AutoSelectNewTabs,
        ImGuiTabBarFlags_TabListPopupButton = C.ImGuiTabBarFlags_TabListPopupButton,
        ImGuiTabBarFlags_NoCloseWithMiddleMouseButton = C.ImGuiTabBarFlags_NoCloseWithMiddleMouseButton,
        ImGuiTabBarFlags_NoTabListScrollingButtons = C.ImGuiTabBarFlags_NoTabListScrollingButtons,
        ImGuiTabBarFlags_NoTooltip = C.ImGuiTabBarFlags_NoTooltip,
        ImGuiTabBarFlags_FittingPolicyResizeDown = C.ImGuiTabBarFlags_FittingPolicyResizeDown,
        ImGuiTabBarFlags_FittingPolicyScroll = C.ImGuiTabBarFlags_FittingPolicyScroll,
        ImGuiTabBarFlags_FittingPolicyMask_ = C.ImGuiTabBarFlags_FittingPolicyMask_,
        ImGuiTabBarFlags_FittingPolicyDefault_ = C.ImGuiTabBarFlags_FittingPolicyDefault_,
    },
    ImGuiTabItemFlags_ = {
        ImGuiTabItemFlags_None = C.ImGuiTabItemFlags_None,
        ImGuiTabItemFlags_UnsavedDocument = C.ImGuiTabItemFlags_UnsavedDocument,
        ImGuiTabItemFlags_SetSelected = C.ImGuiTabItemFlags_SetSelected,
        ImGuiTabItemFlags_NoCloseWithMiddleMouseButton = C.ImGuiTabItemFlags_NoCloseWithMiddleMouseButton,
        ImGuiTabItemFlags_NoPushId = C.ImGuiTabItemFlags_NoPushId,
        ImGuiTabItemFlags_NoTooltip = C.ImGuiTabItemFlags_NoTooltip,
        ImGuiTabItemFlags_NoReorder = C.ImGuiTabItemFlags_NoReorder,
        ImGuiTabItemFlags_Leading = C.ImGuiTabItemFlags_Leading,
        ImGuiTabItemFlags_Trailing = C.ImGuiTabItemFlags_Trailing,
    },
    ImGuiTableFlags_ = {
        ImGuiTableFlags_None = C.ImGuiTableFlags_None,
        ImGuiTableFlags_Resizable = C.ImGuiTableFlags_Resizable,
        ImGuiTableFlags_Reorderable = C.ImGuiTableFlags_Reorderable,
        ImGuiTableFlags_Hideable = C.ImGuiTableFlags_Hideable,
        ImGuiTableFlags_Sortable = C.ImGuiTableFlags_Sortable,
        ImGuiTableFlags_NoSavedSettings = C.ImGuiTableFlags_NoSavedSettings,
        ImGuiTableFlags_ContextMenuInBody = C.ImGuiTableFlags_ContextMenuInBody,
        ImGuiTableFlags_RowBg = C.ImGuiTableFlags_RowBg,
        ImGuiTableFlags_BordersInnerH = C.ImGuiTableFlags_BordersInnerH,
        ImGuiTableFlags_BordersOuterH = C.ImGuiTableFlags_BordersOuterH,
        ImGuiTableFlags_BordersInnerV = C.ImGuiTableFlags_BordersInnerV,
        ImGuiTableFlags_BordersOuterV = C.ImGuiTableFlags_BordersOuterV,
        ImGuiTableFlags_BordersH = C.ImGuiTableFlags_BordersH,
        ImGuiTableFlags_BordersV = C.ImGuiTableFlags_BordersV,
        ImGuiTableFlags_BordersInner = C.ImGuiTableFlags_BordersInner,
        ImGuiTableFlags_BordersOuter = C.ImGuiTableFlags_BordersOuter,
        ImGuiTableFlags_Borders = C.ImGuiTableFlags_Borders,
        ImGuiTableFlags_NoBordersInBody = C.ImGuiTableFlags_NoBordersInBody,
        ImGuiTableFlags_NoBordersInBodyUntilResize = C.ImGuiTableFlags_NoBordersInBodyUntilResize,
        ImGuiTableFlags_SizingFixedFit = C.ImGuiTableFlags_SizingFixedFit,
        ImGuiTableFlags_SizingFixedSame = C.ImGuiTableFlags_SizingFixedSame,
        ImGuiTableFlags_SizingStretchProp = C.ImGuiTableFlags_SizingStretchProp,
        ImGuiTableFlags_SizingStretchSame = C.ImGuiTableFlags_SizingStretchSame,
        ImGuiTableFlags_NoHostExtendX = C.ImGuiTableFlags_NoHostExtendX,
        ImGuiTableFlags_NoHostExtendY = C.ImGuiTableFlags_NoHostExtendY,
        ImGuiTableFlags_NoKeepColumnsVisible = C.ImGuiTableFlags_NoKeepColumnsVisible,
        ImGuiTableFlags_PreciseWidths = C.ImGuiTableFlags_PreciseWidths,
        ImGuiTableFlags_NoClip = C.ImGuiTableFlags_NoClip,
        ImGuiTableFlags_PadOuterX = C.ImGuiTableFlags_PadOuterX,
        ImGuiTableFlags_NoPadOuterX = C.ImGuiTableFlags_NoPadOuterX,
        ImGuiTableFlags_NoPadInnerX = C.ImGuiTableFlags_NoPadInnerX,
        ImGuiTableFlags_ScrollX = C.ImGuiTableFlags_ScrollX,
        ImGuiTableFlags_ScrollY = C.ImGuiTableFlags_ScrollY,
        ImGuiTableFlags_SortMulti = C.ImGuiTableFlags_SortMulti,
        ImGuiTableFlags_SortTristate = C.ImGuiTableFlags_SortTristate,
        ImGuiTableFlags_SizingMask_ = C.ImGuiTableFlags_SizingMask_,
    },
    ImGuiTableColumnFlags_ = {
        ImGuiTableColumnFlags_None = C.ImGuiTableColumnFlags_None,
        ImGuiTableColumnFlags_Disabled = C.ImGuiTableColumnFlags_Disabled,
        ImGuiTableColumnFlags_DefaultHide = C.ImGuiTableColumnFlags_DefaultHide,
        ImGuiTableColumnFlags_DefaultSort = C.ImGuiTableColumnFlags_DefaultSort,
        ImGuiTableColumnFlags_WidthStretch = C.ImGuiTableColumnFlags_WidthStretch,
        ImGuiTableColumnFlags_WidthFixed = C.ImGuiTableColumnFlags_WidthFixed,
        ImGuiTableColumnFlags_NoResize = C.ImGuiTableColumnFlags_NoResize,
        ImGuiTableColumnFlags_NoReorder = C.ImGuiTableColumnFlags_NoReorder,
        ImGuiTableColumnFlags_NoHide = C.ImGuiTableColumnFlags_NoHide,
        ImGuiTableColumnFlags_NoClip = C.ImGuiTableColumnFlags_NoClip,
        ImGuiTableColumnFlags_NoSort = C.ImGuiTableColumnFlags_NoSort,
        ImGuiTableColumnFlags_NoSortAscending = C.ImGuiTableColumnFlags_NoSortAscending,
        ImGuiTableColumnFlags_NoSortDescending = C.ImGuiTableColumnFlags_NoSortDescending,
        ImGuiTableColumnFlags_NoHeaderLabel = C.ImGuiTableColumnFlags_NoHeaderLabel,
        ImGuiTableColumnFlags_NoHeaderWidth = C.ImGuiTableColumnFlags_NoHeaderWidth,
        ImGuiTableColumnFlags_PreferSortAscending = C.ImGuiTableColumnFlags_PreferSortAscending,
        ImGuiTableColumnFlags_PreferSortDescending = C.ImGuiTableColumnFlags_PreferSortDescending,
        ImGuiTableColumnFlags_IndentEnable = C.ImGuiTableColumnFlags_IndentEnable,
        ImGuiTableColumnFlags_IndentDisable = C.ImGuiTableColumnFlags_IndentDisable,
        ImGuiTableColumnFlags_IsEnabled = C.ImGuiTableColumnFlags_IsEnabled,
        ImGuiTableColumnFlags_IsVisible = C.ImGuiTableColumnFlags_IsVisible,
        ImGuiTableColumnFlags_IsSorted = C.ImGuiTableColumnFlags_IsSorted,
        ImGuiTableColumnFlags_IsHovered = C.ImGuiTableColumnFlags_IsHovered,
        ImGuiTableColumnFlags_WidthMask_ = C.ImGuiTableColumnFlags_WidthMask_,
        ImGuiTableColumnFlags_IndentMask_ = C.ImGuiTableColumnFlags_IndentMask_,
        ImGuiTableColumnFlags_StatusMask_ = C.ImGuiTableColumnFlags_StatusMask_,
        ImGuiTableColumnFlags_NoDirectResize_ = C.ImGuiTableColumnFlags_NoDirectResize_,
    },
    ImGuiTableRowFlags_ = {
        ImGuiTableRowFlags_None = C.ImGuiTableRowFlags_None,
        ImGuiTableRowFlags_Headers = C.ImGuiTableRowFlags_Headers,
    },
    ImGuiTableBgTarget_ = {
        ImGuiTableBgTarget_None = C.ImGuiTableBgTarget_None,
        ImGuiTableBgTarget_RowBg0 = C.ImGuiTableBgTarget_RowBg0,
        ImGuiTableBgTarget_RowBg1 = C.ImGuiTableBgTarget_RowBg1,
        ImGuiTableBgTarget_CellBg = C.ImGuiTableBgTarget_CellBg,
    },
    ImGuiFocusedFlags_ = {
        ImGuiFocusedFlags_None = C.ImGuiFocusedFlags_None,
        ImGuiFocusedFlags_ChildWindows = C.ImGuiFocusedFlags_ChildWindows,
        ImGuiFocusedFlags_RootWindow = C.ImGuiFocusedFlags_RootWindow,
        ImGuiFocusedFlags_AnyWindow = C.ImGuiFocusedFlags_AnyWindow,
        ImGuiFocusedFlags_RootAndChildWindows = C.ImGuiFocusedFlags_RootAndChildWindows,
    },
    ImGuiHoveredFlags_ = {
        ImGuiHoveredFlags_None = C.ImGuiHoveredFlags_None,
        ImGuiHoveredFlags_ChildWindows = C.ImGuiHoveredFlags_ChildWindows,
        ImGuiHoveredFlags_RootWindow = C.ImGuiHoveredFlags_RootWindow,
        ImGuiHoveredFlags_AnyWindow = C.ImGuiHoveredFlags_AnyWindow,
        ImGuiHoveredFlags_AllowWhenBlockedByPopup = C.ImGuiHoveredFlags_AllowWhenBlockedByPopup,
        ImGuiHoveredFlags_AllowWhenBlockedByActiveItem = C.ImGuiHoveredFlags_AllowWhenBlockedByActiveItem,
        ImGuiHoveredFlags_AllowWhenOverlapped = C.ImGuiHoveredFlags_AllowWhenOverlapped,
        ImGuiHoveredFlags_AllowWhenDisabled = C.ImGuiHoveredFlags_AllowWhenDisabled,
        ImGuiHoveredFlags_RectOnly = C.ImGuiHoveredFlags_RectOnly,
        ImGuiHoveredFlags_RootAndChildWindows = C.ImGuiHoveredFlags_RootAndChildWindows,
    },
    ImGuiDockNodeFlags_ = {
        ImGuiDockNodeFlags_None = C.ImGuiDockNodeFlags_None,
        ImGuiDockNodeFlags_KeepAliveOnly = C.ImGuiDockNodeFlags_KeepAliveOnly,
        ImGuiDockNodeFlags_NoDockingInCentralNode = C.ImGuiDockNodeFlags_NoDockingInCentralNode,
        ImGuiDockNodeFlags_PassthruCentralNode = C.ImGuiDockNodeFlags_PassthruCentralNode,
        ImGuiDockNodeFlags_NoSplit = C.ImGuiDockNodeFlags_NoSplit,
        ImGuiDockNodeFlags_NoResize = C.ImGuiDockNodeFlags_NoResize,
        ImGuiDockNodeFlags_AutoHideTabBar = C.ImGuiDockNodeFlags_AutoHideTabBar,
    },
    ImGuiDragDropFlags_ = {
        ImGuiDragDropFlags_None = C.ImGuiDragDropFlags_None,
        ImGuiDragDropFlags_SourceNoPreviewTooltip = C.ImGuiDragDropFlags_SourceNoPreviewTooltip,
        ImGuiDragDropFlags_SourceNoDisableHover = C.ImGuiDragDropFlags_SourceNoDisableHover,
        ImGuiDragDropFlags_SourceNoHoldToOpenOthers = C.ImGuiDragDropFlags_SourceNoHoldToOpenOthers,
        ImGuiDragDropFlags_SourceAllowNullID = C.ImGuiDragDropFlags_SourceAllowNullID,
        ImGuiDragDropFlags_SourceExtern = C.ImGuiDragDropFlags_SourceExtern,
        ImGuiDragDropFlags_SourceAutoExpirePayload = C.ImGuiDragDropFlags_SourceAutoExpirePayload,
        ImGuiDragDropFlags_AcceptBeforeDelivery = C.ImGuiDragDropFlags_AcceptBeforeDelivery,
        ImGuiDragDropFlags_AcceptNoDrawDefaultRect = C.ImGuiDragDropFlags_AcceptNoDrawDefaultRect,
        ImGuiDragDropFlags_AcceptNoPreviewTooltip = C.ImGuiDragDropFlags_AcceptNoPreviewTooltip,
        ImGuiDragDropFlags_AcceptPeekOnly = C.ImGuiDragDropFlags_AcceptPeekOnly,
    },
    ImGuiDataType_ = {
        ImGuiDataType_S8 = C.ImGuiDataType_S8,
        ImGuiDataType_U8 = C.ImGuiDataType_U8,
        ImGuiDataType_S16 = C.ImGuiDataType_S16,
        ImGuiDataType_U16 = C.ImGuiDataType_U16,
        ImGuiDataType_S32 = C.ImGuiDataType_S32,
        ImGuiDataType_U32 = C.ImGuiDataType_U32,
        ImGuiDataType_S64 = C.ImGuiDataType_S64,
        ImGuiDataType_U64 = C.ImGuiDataType_U64,
        ImGuiDataType_Float = C.ImGuiDataType_Float,
        ImGuiDataType_Double = C.ImGuiDataType_Double,
        ImGuiDataType_COUNT = C.ImGuiDataType_COUNT,
    },
    ImGuiDir_ = {
        ImGuiDir_None = C.ImGuiDir_None,
        ImGuiDir_Left = C.ImGuiDir_Left,
        ImGuiDir_Right = C.ImGuiDir_Right,
        ImGuiDir_Up = C.ImGuiDir_Up,
        ImGuiDir_Down = C.ImGuiDir_Down,
        ImGuiDir_COUNT = C.ImGuiDir_COUNT,
    },
    ImGuiSortDirection_ = {
        ImGuiSortDirection_None = C.ImGuiSortDirection_None,
        ImGuiSortDirection_Ascending = C.ImGuiSortDirection_Ascending,
        ImGuiSortDirection_Descending = C.ImGuiSortDirection_Descending,
    },
    ImGuiKey_ = {
        ImGuiKey_Tab = C.ImGuiKey_Tab,
        ImGuiKey_LeftArrow = C.ImGuiKey_LeftArrow,
        ImGuiKey_RightArrow = C.ImGuiKey_RightArrow,
        ImGuiKey_UpArrow = C.ImGuiKey_UpArrow,
        ImGuiKey_DownArrow = C.ImGuiKey_DownArrow,
        ImGuiKey_PageUp = C.ImGuiKey_PageUp,
        ImGuiKey_PageDown = C.ImGuiKey_PageDown,
        ImGuiKey_Home = C.ImGuiKey_Home,
        ImGuiKey_End = C.ImGuiKey_End,
        ImGuiKey_Insert = C.ImGuiKey_Insert,
        ImGuiKey_Delete = C.ImGuiKey_Delete,
        ImGuiKey_Backspace = C.ImGuiKey_Backspace,
        ImGuiKey_Space = C.ImGuiKey_Space,
        ImGuiKey_Enter = C.ImGuiKey_Enter,
        ImGuiKey_Escape = C.ImGuiKey_Escape,
        ImGuiKey_KeyPadEnter = C.ImGuiKey_KeyPadEnter,
        ImGuiKey_A = C.ImGuiKey_A,
        ImGuiKey_C = C.ImGuiKey_C,
        ImGuiKey_V = C.ImGuiKey_V,
        ImGuiKey_X = C.ImGuiKey_X,
        ImGuiKey_Y = C.ImGuiKey_Y,
        ImGuiKey_Z = C.ImGuiKey_Z,
        ImGuiKey_COUNT = C.ImGuiKey_COUNT,
    },
    ImGuiKeyModFlags_ = {
        ImGuiKeyModFlags_None = C.ImGuiKeyModFlags_None,
        ImGuiKeyModFlags_Ctrl = C.ImGuiKeyModFlags_Ctrl,
        ImGuiKeyModFlags_Shift = C.ImGuiKeyModFlags_Shift,
        ImGuiKeyModFlags_Alt = C.ImGuiKeyModFlags_Alt,
        ImGuiKeyModFlags_Super = C.ImGuiKeyModFlags_Super,
    },
    ImGuiNavInput_ = {
        ImGuiNavInput_Activate = C.ImGuiNavInput_Activate,
        ImGuiNavInput_Cancel = C.ImGuiNavInput_Cancel,
        ImGuiNavInput_Input = C.ImGuiNavInput_Input,
        ImGuiNavInput_Menu = C.ImGuiNavInput_Menu,
        ImGuiNavInput_DpadLeft = C.ImGuiNavInput_DpadLeft,
        ImGuiNavInput_DpadRight = C.ImGuiNavInput_DpadRight,
        ImGuiNavInput_DpadUp = C.ImGuiNavInput_DpadUp,
        ImGuiNavInput_DpadDown = C.ImGuiNavInput_DpadDown,
        ImGuiNavInput_LStickLeft = C.ImGuiNavInput_LStickLeft,
        ImGuiNavInput_LStickRight = C.ImGuiNavInput_LStickRight,
        ImGuiNavInput_LStickUp = C.ImGuiNavInput_LStickUp,
        ImGuiNavInput_LStickDown = C.ImGuiNavInput_LStickDown,
        ImGuiNavInput_FocusPrev = C.ImGuiNavInput_FocusPrev,
        ImGuiNavInput_FocusNext = C.ImGuiNavInput_FocusNext,
        ImGuiNavInput_TweakSlow = C.ImGuiNavInput_TweakSlow,
        ImGuiNavInput_TweakFast = C.ImGuiNavInput_TweakFast,
        ImGuiNavInput_KeyMenu_ = C.ImGuiNavInput_KeyMenu_,
        ImGuiNavInput_KeyLeft_ = C.ImGuiNavInput_KeyLeft_,
        ImGuiNavInput_KeyRight_ = C.ImGuiNavInput_KeyRight_,
        ImGuiNavInput_KeyUp_ = C.ImGuiNavInput_KeyUp_,
        ImGuiNavInput_KeyDown_ = C.ImGuiNavInput_KeyDown_,
        ImGuiNavInput_COUNT = C.ImGuiNavInput_COUNT,
        ImGuiNavInput_InternalStart_ = C.ImGuiNavInput_InternalStart_,
    },
    ImGuiConfigFlags_ = {
        ImGuiConfigFlags_None = C.ImGuiConfigFlags_None,
        ImGuiConfigFlags_NavEnableKeyboard = C.ImGuiConfigFlags_NavEnableKeyboard,
        ImGuiConfigFlags_NavEnableGamepad = C.ImGuiConfigFlags_NavEnableGamepad,
        ImGuiConfigFlags_NavEnableSetMousePos = C.ImGuiConfigFlags_NavEnableSetMousePos,
        ImGuiConfigFlags_NavNoCaptureKeyboard = C.ImGuiConfigFlags_NavNoCaptureKeyboard,
        ImGuiConfigFlags_NoMouse = C.ImGuiConfigFlags_NoMouse,
        ImGuiConfigFlags_NoMouseCursorChange = C.ImGuiConfigFlags_NoMouseCursorChange,
        ImGuiConfigFlags_DockingEnable = C.ImGuiConfigFlags_DockingEnable,
        ImGuiConfigFlags_ViewportsEnable = C.ImGuiConfigFlags_ViewportsEnable,
        ImGuiConfigFlags_DpiEnableScaleViewports = C.ImGuiConfigFlags_DpiEnableScaleViewports,
        ImGuiConfigFlags_DpiEnableScaleFonts = C.ImGuiConfigFlags_DpiEnableScaleFonts,
        ImGuiConfigFlags_IsSRGB = C.ImGuiConfigFlags_IsSRGB,
        ImGuiConfigFlags_IsTouchScreen = C.ImGuiConfigFlags_IsTouchScreen,
    },
    ImGuiBackendFlags_ = {
        ImGuiBackendFlags_None = C.ImGuiBackendFlags_None,
        ImGuiBackendFlags_HasGamepad = C.ImGuiBackendFlags_HasGamepad,
        ImGuiBackendFlags_HasMouseCursors = C.ImGuiBackendFlags_HasMouseCursors,
        ImGuiBackendFlags_HasSetMousePos = C.ImGuiBackendFlags_HasSetMousePos,
        ImGuiBackendFlags_RendererHasVtxOffset = C.ImGuiBackendFlags_RendererHasVtxOffset,
        ImGuiBackendFlags_PlatformHasViewports = C.ImGuiBackendFlags_PlatformHasViewports,
        ImGuiBackendFlags_HasMouseHoveredViewport = C.ImGuiBackendFlags_HasMouseHoveredViewport,
        ImGuiBackendFlags_RendererHasViewports = C.ImGuiBackendFlags_RendererHasViewports,
    },
    ImGuiCol_ = {
        ImGuiCol_Text = C.ImGuiCol_Text,
        ImGuiCol_TextDisabled = C.ImGuiCol_TextDisabled,
        ImGuiCol_WindowBg = C.ImGuiCol_WindowBg,
        ImGuiCol_ChildBg = C.ImGuiCol_ChildBg,
        ImGuiCol_PopupBg = C.ImGuiCol_PopupBg,
        ImGuiCol_Border = C.ImGuiCol_Border,
        ImGuiCol_BorderShadow = C.ImGuiCol_BorderShadow,
        ImGuiCol_FrameBg = C.ImGuiCol_FrameBg,
        ImGuiCol_FrameBgHovered = C.ImGuiCol_FrameBgHovered,
        ImGuiCol_FrameBgActive = C.ImGuiCol_FrameBgActive,
        ImGuiCol_TitleBg = C.ImGuiCol_TitleBg,
        ImGuiCol_TitleBgActive = C.ImGuiCol_TitleBgActive,
        ImGuiCol_TitleBgCollapsed = C.ImGuiCol_TitleBgCollapsed,
        ImGuiCol_MenuBarBg = C.ImGuiCol_MenuBarBg,
        ImGuiCol_ScrollbarBg = C.ImGuiCol_ScrollbarBg,
        ImGuiCol_ScrollbarGrab = C.ImGuiCol_ScrollbarGrab,
        ImGuiCol_ScrollbarGrabHovered = C.ImGuiCol_ScrollbarGrabHovered,
        ImGuiCol_ScrollbarGrabActive = C.ImGuiCol_ScrollbarGrabActive,
        ImGuiCol_CheckMark = C.ImGuiCol_CheckMark,
        ImGuiCol_SliderGrab = C.ImGuiCol_SliderGrab,
        ImGuiCol_SliderGrabActive = C.ImGuiCol_SliderGrabActive,
        ImGuiCol_Button = C.ImGuiCol_Button,
        ImGuiCol_ButtonHovered = C.ImGuiCol_ButtonHovered,
        ImGuiCol_ButtonActive = C.ImGuiCol_ButtonActive,
        ImGuiCol_Header = C.ImGuiCol_Header,
        ImGuiCol_HeaderHovered = C.ImGuiCol_HeaderHovered,
        ImGuiCol_HeaderActive = C.ImGuiCol_HeaderActive,
        ImGuiCol_Separator = C.ImGuiCol_Separator,
        ImGuiCol_SeparatorHovered = C.ImGuiCol_SeparatorHovered,
        ImGuiCol_SeparatorActive = C.ImGuiCol_SeparatorActive,
        ImGuiCol_ResizeGrip = C.ImGuiCol_ResizeGrip,
        ImGuiCol_ResizeGripHovered = C.ImGuiCol_ResizeGripHovered,
        ImGuiCol_ResizeGripActive = C.ImGuiCol_ResizeGripActive,
        ImGuiCol_Tab = C.ImGuiCol_Tab,
        ImGuiCol_TabHovered = C.ImGuiCol_TabHovered,
        ImGuiCol_TabActive = C.ImGuiCol_TabActive,
        ImGuiCol_TabUnfocused = C.ImGuiCol_TabUnfocused,
        ImGuiCol_TabUnfocusedActive = C.ImGuiCol_TabUnfocusedActive,
        ImGuiCol_DockingPreview = C.ImGuiCol_DockingPreview,
        ImGuiCol_DockingEmptyBg = C.ImGuiCol_DockingEmptyBg,
        ImGuiCol_PlotLines = C.ImGuiCol_PlotLines,
        ImGuiCol_PlotLinesHovered = C.ImGuiCol_PlotLinesHovered,
        ImGuiCol_PlotHistogram = C.ImGuiCol_PlotHistogram,
        ImGuiCol_PlotHistogramHovered = C.ImGuiCol_PlotHistogramHovered,
        ImGuiCol_TableHeaderBg = C.ImGuiCol_TableHeaderBg,
        ImGuiCol_TableBorderStrong = C.ImGuiCol_TableBorderStrong,
        ImGuiCol_TableBorderLight = C.ImGuiCol_TableBorderLight,
        ImGuiCol_TableRowBg = C.ImGuiCol_TableRowBg,
        ImGuiCol_TableRowBgAlt = C.ImGuiCol_TableRowBgAlt,
        ImGuiCol_TextSelectedBg = C.ImGuiCol_TextSelectedBg,
        ImGuiCol_DragDropTarget = C.ImGuiCol_DragDropTarget,
        ImGuiCol_NavHighlight = C.ImGuiCol_NavHighlight,
        ImGuiCol_NavWindowingHighlight = C.ImGuiCol_NavWindowingHighlight,
        ImGuiCol_NavWindowingDimBg = C.ImGuiCol_NavWindowingDimBg,
        ImGuiCol_ModalWindowDimBg = C.ImGuiCol_ModalWindowDimBg,
        ImGuiCol_COUNT = C.ImGuiCol_COUNT,
    },
    ImGuiStyleVar_ = {
        ImGuiStyleVar_Alpha = C.ImGuiStyleVar_Alpha,
        ImGuiStyleVar_WindowPadding = C.ImGuiStyleVar_WindowPadding,
        ImGuiStyleVar_WindowRounding = C.ImGuiStyleVar_WindowRounding,
        ImGuiStyleVar_WindowBorderSize = C.ImGuiStyleVar_WindowBorderSize,
        ImGuiStyleVar_WindowMinSize = C.ImGuiStyleVar_WindowMinSize,
        ImGuiStyleVar_WindowTitleAlign = C.ImGuiStyleVar_WindowTitleAlign,
        ImGuiStyleVar_ChildRounding = C.ImGuiStyleVar_ChildRounding,
        ImGuiStyleVar_ChildBorderSize = C.ImGuiStyleVar_ChildBorderSize,
        ImGuiStyleVar_PopupRounding = C.ImGuiStyleVar_PopupRounding,
        ImGuiStyleVar_PopupBorderSize = C.ImGuiStyleVar_PopupBorderSize,
        ImGuiStyleVar_FramePadding = C.ImGuiStyleVar_FramePadding,
        ImGuiStyleVar_FrameRounding = C.ImGuiStyleVar_FrameRounding,
        ImGuiStyleVar_FrameBorderSize = C.ImGuiStyleVar_FrameBorderSize,
        ImGuiStyleVar_ItemSpacing = C.ImGuiStyleVar_ItemSpacing,
        ImGuiStyleVar_ItemInnerSpacing = C.ImGuiStyleVar_ItemInnerSpacing,
        ImGuiStyleVar_IndentSpacing = C.ImGuiStyleVar_IndentSpacing,
        ImGuiStyleVar_CellPadding = C.ImGuiStyleVar_CellPadding,
        ImGuiStyleVar_ScrollbarSize = C.ImGuiStyleVar_ScrollbarSize,
        ImGuiStyleVar_ScrollbarRounding = C.ImGuiStyleVar_ScrollbarRounding,
        ImGuiStyleVar_GrabMinSize = C.ImGuiStyleVar_GrabMinSize,
        ImGuiStyleVar_GrabRounding = C.ImGuiStyleVar_GrabRounding,
        ImGuiStyleVar_TabRounding = C.ImGuiStyleVar_TabRounding,
        ImGuiStyleVar_ButtonTextAlign = C.ImGuiStyleVar_ButtonTextAlign,
        ImGuiStyleVar_SelectableTextAlign = C.ImGuiStyleVar_SelectableTextAlign,
        ImGuiStyleVar_COUNT = C.ImGuiStyleVar_COUNT,
    },
    ImGuiButtonFlags_ = {
        ImGuiButtonFlags_None = C.ImGuiButtonFlags_None,
        ImGuiButtonFlags_MouseButtonLeft = C.ImGuiButtonFlags_MouseButtonLeft,
        ImGuiButtonFlags_MouseButtonRight = C.ImGuiButtonFlags_MouseButtonRight,
        ImGuiButtonFlags_MouseButtonMiddle = C.ImGuiButtonFlags_MouseButtonMiddle,
        ImGuiButtonFlags_MouseButtonMask_ = C.ImGuiButtonFlags_MouseButtonMask_,
        ImGuiButtonFlags_MouseButtonDefault_ = C.ImGuiButtonFlags_MouseButtonDefault_,
    },
    ImGuiColorEditFlags_ = {
        ImGuiColorEditFlags_None = C.ImGuiColorEditFlags_None,
        ImGuiColorEditFlags_NoAlpha = C.ImGuiColorEditFlags_NoAlpha,
        ImGuiColorEditFlags_NoPicker = C.ImGuiColorEditFlags_NoPicker,
        ImGuiColorEditFlags_NoOptions = C.ImGuiColorEditFlags_NoOptions,
        ImGuiColorEditFlags_NoSmallPreview = C.ImGuiColorEditFlags_NoSmallPreview,
        ImGuiColorEditFlags_NoInputs = C.ImGuiColorEditFlags_NoInputs,
        ImGuiColorEditFlags_NoTooltip = C.ImGuiColorEditFlags_NoTooltip,
        ImGuiColorEditFlags_NoLabel = C.ImGuiColorEditFlags_NoLabel,
        ImGuiColorEditFlags_NoSidePreview = C.ImGuiColorEditFlags_NoSidePreview,
        ImGuiColorEditFlags_NoDragDrop = C.ImGuiColorEditFlags_NoDragDrop,
        ImGuiColorEditFlags_NoBorder = C.ImGuiColorEditFlags_NoBorder,
        ImGuiColorEditFlags_AlphaBar = C.ImGuiColorEditFlags_AlphaBar,
        ImGuiColorEditFlags_AlphaPreview = C.ImGuiColorEditFlags_AlphaPreview,
        ImGuiColorEditFlags_AlphaPreviewHalf = C.ImGuiColorEditFlags_AlphaPreviewHalf,
        ImGuiColorEditFlags_HDR = C.ImGuiColorEditFlags_HDR,
        ImGuiColorEditFlags_DisplayRGB = C.ImGuiColorEditFlags_DisplayRGB,
        ImGuiColorEditFlags_DisplayHSV = C.ImGuiColorEditFlags_DisplayHSV,
        ImGuiColorEditFlags_DisplayHex = C.ImGuiColorEditFlags_DisplayHex,
        ImGuiColorEditFlags_Uint8 = C.ImGuiColorEditFlags_Uint8,
        ImGuiColorEditFlags_Float = C.ImGuiColorEditFlags_Float,
        ImGuiColorEditFlags_PickerHueBar = C.ImGuiColorEditFlags_PickerHueBar,
        ImGuiColorEditFlags_PickerHueWheel = C.ImGuiColorEditFlags_PickerHueWheel,
        ImGuiColorEditFlags_InputRGB = C.ImGuiColorEditFlags_InputRGB,
        ImGuiColorEditFlags_InputHSV = C.ImGuiColorEditFlags_InputHSV,
        ImGuiColorEditFlags__OptionsDefault = C.ImGuiColorEditFlags__OptionsDefault,
        ImGuiColorEditFlags__DisplayMask = C.ImGuiColorEditFlags__DisplayMask,
        ImGuiColorEditFlags__DataTypeMask = C.ImGuiColorEditFlags__DataTypeMask,
        ImGuiColorEditFlags__PickerMask = C.ImGuiColorEditFlags__PickerMask,
        ImGuiColorEditFlags__InputMask = C.ImGuiColorEditFlags__InputMask,
        ImGuiColorEditFlags_RGB = C.ImGuiColorEditFlags_RGB,
        ImGuiColorEditFlags_HSV = C.ImGuiColorEditFlags_HSV,
        ImGuiColorEditFlags_HEX = C.ImGuiColorEditFlags_HEX,
    },
    ImGuiSliderFlags_ = {
        ImGuiSliderFlags_None = C.ImGuiSliderFlags_None,
        ImGuiSliderFlags_AlwaysClamp = C.ImGuiSliderFlags_AlwaysClamp,
        ImGuiSliderFlags_Logarithmic = C.ImGuiSliderFlags_Logarithmic,
        ImGuiSliderFlags_NoRoundToFormat = C.ImGuiSliderFlags_NoRoundToFormat,
        ImGuiSliderFlags_NoInput = C.ImGuiSliderFlags_NoInput,
        ImGuiSliderFlags_InvalidMask_ = C.ImGuiSliderFlags_InvalidMask_,
        ImGuiSliderFlags_ClampOnInput = C.ImGuiSliderFlags_ClampOnInput,
    },
    ImGuiMouseButton_ = {
        ImGuiMouseButton_Left = C.ImGuiMouseButton_Left,
        ImGuiMouseButton_Right = C.ImGuiMouseButton_Right,
        ImGuiMouseButton_Middle = C.ImGuiMouseButton_Middle,
        ImGuiMouseButton_COUNT = C.ImGuiMouseButton_COUNT,
    },
    ImGuiMouseCursor_ = {
        ImGuiMouseCursor_None = C.ImGuiMouseCursor_None,
        ImGuiMouseCursor_Arrow = C.ImGuiMouseCursor_Arrow,
        ImGuiMouseCursor_TextInput = C.ImGuiMouseCursor_TextInput,
        ImGuiMouseCursor_ResizeAll = C.ImGuiMouseCursor_ResizeAll,
        ImGuiMouseCursor_ResizeNS = C.ImGuiMouseCursor_ResizeNS,
        ImGuiMouseCursor_ResizeEW = C.ImGuiMouseCursor_ResizeEW,
        ImGuiMouseCursor_ResizeNESW = C.ImGuiMouseCursor_ResizeNESW,
        ImGuiMouseCursor_ResizeNWSE = C.ImGuiMouseCursor_ResizeNWSE,
        ImGuiMouseCursor_Hand = C.ImGuiMouseCursor_Hand,
        ImGuiMouseCursor_NotAllowed = C.ImGuiMouseCursor_NotAllowed,
        ImGuiMouseCursor_COUNT = C.ImGuiMouseCursor_COUNT,
    },
    ImGuiCond_ = {
        ImGuiCond_None = C.ImGuiCond_None,
        ImGuiCond_Always = C.ImGuiCond_Always,
        ImGuiCond_Once = C.ImGuiCond_Once,
        ImGuiCond_FirstUseEver = C.ImGuiCond_FirstUseEver,
        ImGuiCond_Appearing = C.ImGuiCond_Appearing,
    },
    ImDrawFlags_ = {
        ImDrawFlags_None = C.ImDrawFlags_None,
        ImDrawFlags_Closed = C.ImDrawFlags_Closed,
        ImDrawFlags_RoundCornersTopLeft = C.ImDrawFlags_RoundCornersTopLeft,
        ImDrawFlags_RoundCornersTopRight = C.ImDrawFlags_RoundCornersTopRight,
        ImDrawFlags_RoundCornersBottomLeft = C.ImDrawFlags_RoundCornersBottomLeft,
        ImDrawFlags_RoundCornersBottomRight = C.ImDrawFlags_RoundCornersBottomRight,
        ImDrawFlags_RoundCornersNone = C.ImDrawFlags_RoundCornersNone,
        ImDrawFlags_RoundCornersTop = C.ImDrawFlags_RoundCornersTop,
        ImDrawFlags_RoundCornersBottom = C.ImDrawFlags_RoundCornersBottom,
        ImDrawFlags_RoundCornersLeft = C.ImDrawFlags_RoundCornersLeft,
        ImDrawFlags_RoundCornersRight = C.ImDrawFlags_RoundCornersRight,
        ImDrawFlags_RoundCornersAll = C.ImDrawFlags_RoundCornersAll,
        ImDrawFlags_RoundCornersDefault_ = C.ImDrawFlags_RoundCornersDefault_,
        ImDrawFlags_RoundCornersMask_ = C.ImDrawFlags_RoundCornersMask_,
    },
    ImDrawListFlags_ = {
        ImDrawListFlags_None = C.ImDrawListFlags_None,
        ImDrawListFlags_AntiAliasedLines = C.ImDrawListFlags_AntiAliasedLines,
        ImDrawListFlags_AntiAliasedLinesUseTex = C.ImDrawListFlags_AntiAliasedLinesUseTex,
        ImDrawListFlags_AntiAliasedFill = C.ImDrawListFlags_AntiAliasedFill,
        ImDrawListFlags_AllowVtxOffset = C.ImDrawListFlags_AllowVtxOffset,
    },
    ImFontAtlasFlags_ = {
        ImFontAtlasFlags_None = C.ImFontAtlasFlags_None,
        ImFontAtlasFlags_NoPowerOfTwoHeight = C.ImFontAtlasFlags_NoPowerOfTwoHeight,
        ImFontAtlasFlags_NoMouseCursors = C.ImFontAtlasFlags_NoMouseCursors,
        ImFontAtlasFlags_NoBakedLines = C.ImFontAtlasFlags_NoBakedLines,
    },
    ImGuiViewportFlags_ = {
        ImGuiViewportFlags_None = C.ImGuiViewportFlags_None,
        ImGuiViewportFlags_IsPlatformWindow = C.ImGuiViewportFlags_IsPlatformWindow,
        ImGuiViewportFlags_IsPlatformMonitor = C.ImGuiViewportFlags_IsPlatformMonitor,
        ImGuiViewportFlags_OwnedByApp = C.ImGuiViewportFlags_OwnedByApp,
        ImGuiViewportFlags_NoDecoration = C.ImGuiViewportFlags_NoDecoration,
        ImGuiViewportFlags_NoTaskBarIcon = C.ImGuiViewportFlags_NoTaskBarIcon,
        ImGuiViewportFlags_NoFocusOnAppearing = C.ImGuiViewportFlags_NoFocusOnAppearing,
        ImGuiViewportFlags_NoFocusOnClick = C.ImGuiViewportFlags_NoFocusOnClick,
        ImGuiViewportFlags_NoInputs = C.ImGuiViewportFlags_NoInputs,
        ImGuiViewportFlags_NoRendererClear = C.ImGuiViewportFlags_NoRendererClear,
        ImGuiViewportFlags_TopMost = C.ImGuiViewportFlags_TopMost,
        ImGuiViewportFlags_Minimized = C.ImGuiViewportFlags_Minimized,
        ImGuiViewportFlags_NoAutoMerge = C.ImGuiViewportFlags_NoAutoMerge,
        ImGuiViewportFlags_CanHostOtherWindows = C.ImGuiViewportFlags_CanHostOtherWindows,
    },
    ImDrawCornerFlags_ = {
        ImDrawCornerFlags_None = C.ImDrawCornerFlags_None,
        ImDrawCornerFlags_TopLeft = C.ImDrawCornerFlags_TopLeft,
        ImDrawCornerFlags_TopRight = C.ImDrawCornerFlags_TopRight,
        ImDrawCornerFlags_BotLeft = C.ImDrawCornerFlags_BotLeft,
        ImDrawCornerFlags_BotRight = C.ImDrawCornerFlags_BotRight,
        ImDrawCornerFlags_All = C.ImDrawCornerFlags_All,
        ImDrawCornerFlags_Top = C.ImDrawCornerFlags_Top,
        ImDrawCornerFlags_Bot = C.ImDrawCornerFlags_Bot,
        ImDrawCornerFlags_Left = C.ImDrawCornerFlags_Left,
        ImDrawCornerFlags_Right = C.ImDrawCornerFlags_Right,
    },
    ImGuiItemFlags_ = {
        ImGuiItemFlags_None = C.ImGuiItemFlags_None,
        ImGuiItemFlags_NoTabStop = C.ImGuiItemFlags_NoTabStop,
        ImGuiItemFlags_ButtonRepeat = C.ImGuiItemFlags_ButtonRepeat,
        ImGuiItemFlags_Disabled = C.ImGuiItemFlags_Disabled,
        ImGuiItemFlags_NoNav = C.ImGuiItemFlags_NoNav,
        ImGuiItemFlags_NoNavDefaultFocus = C.ImGuiItemFlags_NoNavDefaultFocus,
        ImGuiItemFlags_SelectableDontClosePopup = C.ImGuiItemFlags_SelectableDontClosePopup,
        ImGuiItemFlags_MixedValue = C.ImGuiItemFlags_MixedValue,
        ImGuiItemFlags_ReadOnly = C.ImGuiItemFlags_ReadOnly,
    },
    ImGuiItemAddFlags_ = {
        ImGuiItemAddFlags_None = C.ImGuiItemAddFlags_None,
        ImGuiItemAddFlags_Focusable = C.ImGuiItemAddFlags_Focusable,
    },
    ImGuiItemStatusFlags_ = {
        ImGuiItemStatusFlags_None = C.ImGuiItemStatusFlags_None,
        ImGuiItemStatusFlags_HoveredRect = C.ImGuiItemStatusFlags_HoveredRect,
        ImGuiItemStatusFlags_HasDisplayRect = C.ImGuiItemStatusFlags_HasDisplayRect,
        ImGuiItemStatusFlags_Edited = C.ImGuiItemStatusFlags_Edited,
        ImGuiItemStatusFlags_ToggledSelection = C.ImGuiItemStatusFlags_ToggledSelection,
        ImGuiItemStatusFlags_ToggledOpen = C.ImGuiItemStatusFlags_ToggledOpen,
        ImGuiItemStatusFlags_HasDeactivated = C.ImGuiItemStatusFlags_HasDeactivated,
        ImGuiItemStatusFlags_Deactivated = C.ImGuiItemStatusFlags_Deactivated,
        ImGuiItemStatusFlags_HoveredWindow = C.ImGuiItemStatusFlags_HoveredWindow,
        ImGuiItemStatusFlags_FocusedByCode = C.ImGuiItemStatusFlags_FocusedByCode,
        ImGuiItemStatusFlags_FocusedByTabbing = C.ImGuiItemStatusFlags_FocusedByTabbing,
        ImGuiItemStatusFlags_Focused = C.ImGuiItemStatusFlags_Focused,
    },
    ImGuiInputTextFlagsPrivate_ = {
        ImGuiInputTextFlags_Multiline = C.ImGuiInputTextFlags_Multiline,
        ImGuiInputTextFlags_NoMarkEdited = C.ImGuiInputTextFlags_NoMarkEdited,
        ImGuiInputTextFlags_MergedItem = C.ImGuiInputTextFlags_MergedItem,
    },
    ImGuiButtonFlagsPrivate_ = {
        ImGuiButtonFlags_PressedOnClick = C.ImGuiButtonFlags_PressedOnClick,
        ImGuiButtonFlags_PressedOnClickRelease = C.ImGuiButtonFlags_PressedOnClickRelease,
        ImGuiButtonFlags_PressedOnClickReleaseAnywhere = C.ImGuiButtonFlags_PressedOnClickReleaseAnywhere,
        ImGuiButtonFlags_PressedOnRelease = C.ImGuiButtonFlags_PressedOnRelease,
        ImGuiButtonFlags_PressedOnDoubleClick = C.ImGuiButtonFlags_PressedOnDoubleClick,
        ImGuiButtonFlags_PressedOnDragDropHold = C.ImGuiButtonFlags_PressedOnDragDropHold,
        ImGuiButtonFlags_Repeat = C.ImGuiButtonFlags_Repeat,
        ImGuiButtonFlags_FlattenChildren = C.ImGuiButtonFlags_FlattenChildren,
        ImGuiButtonFlags_AllowItemOverlap = C.ImGuiButtonFlags_AllowItemOverlap,
        ImGuiButtonFlags_DontClosePopups = C.ImGuiButtonFlags_DontClosePopups,
        ImGuiButtonFlags_AlignTextBaseLine = C.ImGuiButtonFlags_AlignTextBaseLine,
        ImGuiButtonFlags_NoKeyModifiers = C.ImGuiButtonFlags_NoKeyModifiers,
        ImGuiButtonFlags_NoHoldingActiveId = C.ImGuiButtonFlags_NoHoldingActiveId,
        ImGuiButtonFlags_NoNavFocus = C.ImGuiButtonFlags_NoNavFocus,
        ImGuiButtonFlags_NoHoveredOnFocus = C.ImGuiButtonFlags_NoHoveredOnFocus,
        ImGuiButtonFlags_PressedOnMask_ = C.ImGuiButtonFlags_PressedOnMask_,
        ImGuiButtonFlags_PressedOnDefault_ = C.ImGuiButtonFlags_PressedOnDefault_,
    },
    ImGuiComboFlagsPrivate_ = {
        ImGuiComboFlags_CustomPreview = C.ImGuiComboFlags_CustomPreview,
    },
    ImGuiSliderFlagsPrivate_ = {
        ImGuiSliderFlags_Vertical = C.ImGuiSliderFlags_Vertical,
        ImGuiSliderFlags_ReadOnly = C.ImGuiSliderFlags_ReadOnly,
    },
    ImGuiSelectableFlagsPrivate_ = {
        ImGuiSelectableFlags_NoHoldingActiveID = C.ImGuiSelectableFlags_NoHoldingActiveID,
        ImGuiSelectableFlags_SelectOnNav = C.ImGuiSelectableFlags_SelectOnNav,
        ImGuiSelectableFlags_SelectOnClick = C.ImGuiSelectableFlags_SelectOnClick,
        ImGuiSelectableFlags_SelectOnRelease = C.ImGuiSelectableFlags_SelectOnRelease,
        ImGuiSelectableFlags_SpanAvailWidth = C.ImGuiSelectableFlags_SpanAvailWidth,
        ImGuiSelectableFlags_DrawHoveredWhenHeld = C.ImGuiSelectableFlags_DrawHoveredWhenHeld,
        ImGuiSelectableFlags_SetNavIdOnHover = C.ImGuiSelectableFlags_SetNavIdOnHover,
        ImGuiSelectableFlags_NoPadWithHalfSpacing = C.ImGuiSelectableFlags_NoPadWithHalfSpacing,
    },
    ImGuiTreeNodeFlagsPrivate_ = {
        ImGuiTreeNodeFlags_ClipLabelForTrailingButton = C.ImGuiTreeNodeFlags_ClipLabelForTrailingButton,
    },
    ImGuiSeparatorFlags_ = {
        ImGuiSeparatorFlags_None = C.ImGuiSeparatorFlags_None,
        ImGuiSeparatorFlags_Horizontal = C.ImGuiSeparatorFlags_Horizontal,
        ImGuiSeparatorFlags_Vertical = C.ImGuiSeparatorFlags_Vertical,
        ImGuiSeparatorFlags_SpanAllColumns = C.ImGuiSeparatorFlags_SpanAllColumns,
    },
    ImGuiTextFlags_ = {
        ImGuiTextFlags_None = C.ImGuiTextFlags_None,
        ImGuiTextFlags_NoWidthForLargeClippedText = C.ImGuiTextFlags_NoWidthForLargeClippedText,
    },
    ImGuiTooltipFlags_ = {
        ImGuiTooltipFlags_None = C.ImGuiTooltipFlags_None,
        ImGuiTooltipFlags_OverridePreviousTooltip = C.ImGuiTooltipFlags_OverridePreviousTooltip,
    },
    ImGuiLayoutType_ = {
        ImGuiLayoutType_Horizontal = C.ImGuiLayoutType_Horizontal,
        ImGuiLayoutType_Vertical = C.ImGuiLayoutType_Vertical,
    },
    ImGuiLogType = {
        ImGuiLogType_None = C.ImGuiLogType_None,
        ImGuiLogType_TTY = C.ImGuiLogType_TTY,
        ImGuiLogType_File = C.ImGuiLogType_File,
        ImGuiLogType_Buffer = C.ImGuiLogType_Buffer,
        ImGuiLogType_Clipboard = C.ImGuiLogType_Clipboard,
    },
    ImGuiAxis = {
        ImGuiAxis_None = C.ImGuiAxis_None,
        ImGuiAxis_X = C.ImGuiAxis_X,
        ImGuiAxis_Y = C.ImGuiAxis_Y,
    },
    ImGuiPlotType = {
        ImGuiPlotType_Lines = C.ImGuiPlotType_Lines,
        ImGuiPlotType_Histogram = C.ImGuiPlotType_Histogram,
    },
    ImGuiInputSource = {
        ImGuiInputSource_None = C.ImGuiInputSource_None,
        ImGuiInputSource_Mouse = C.ImGuiInputSource_Mouse,
        ImGuiInputSource_Keyboard = C.ImGuiInputSource_Keyboard,
        ImGuiInputSource_Gamepad = C.ImGuiInputSource_Gamepad,
        ImGuiInputSource_Nav = C.ImGuiInputSource_Nav,
        ImGuiInputSource_Clipboard = C.ImGuiInputSource_Clipboard,
        ImGuiInputSource_COUNT = C.ImGuiInputSource_COUNT,
    },
    ImGuiInputReadMode = {
        ImGuiInputReadMode_Down = C.ImGuiInputReadMode_Down,
        ImGuiInputReadMode_Pressed = C.ImGuiInputReadMode_Pressed,
        ImGuiInputReadMode_Released = C.ImGuiInputReadMode_Released,
        ImGuiInputReadMode_Repeat = C.ImGuiInputReadMode_Repeat,
        ImGuiInputReadMode_RepeatSlow = C.ImGuiInputReadMode_RepeatSlow,
        ImGuiInputReadMode_RepeatFast = C.ImGuiInputReadMode_RepeatFast,
    },
    ImGuiNavHighlightFlags_ = {
        ImGuiNavHighlightFlags_None = C.ImGuiNavHighlightFlags_None,
        ImGuiNavHighlightFlags_TypeDefault = C.ImGuiNavHighlightFlags_TypeDefault,
        ImGuiNavHighlightFlags_TypeThin = C.ImGuiNavHighlightFlags_TypeThin,
        ImGuiNavHighlightFlags_AlwaysDraw = C.ImGuiNavHighlightFlags_AlwaysDraw,
        ImGuiNavHighlightFlags_NoRounding = C.ImGuiNavHighlightFlags_NoRounding,
    },
    ImGuiNavDirSourceFlags_ = {
        ImGuiNavDirSourceFlags_None = C.ImGuiNavDirSourceFlags_None,
        ImGuiNavDirSourceFlags_Keyboard = C.ImGuiNavDirSourceFlags_Keyboard,
        ImGuiNavDirSourceFlags_PadDPad = C.ImGuiNavDirSourceFlags_PadDPad,
        ImGuiNavDirSourceFlags_PadLStick = C.ImGuiNavDirSourceFlags_PadLStick,
    },
    ImGuiNavMoveFlags_ = {
        ImGuiNavMoveFlags_None = C.ImGuiNavMoveFlags_None,
        ImGuiNavMoveFlags_LoopX = C.ImGuiNavMoveFlags_LoopX,
        ImGuiNavMoveFlags_LoopY = C.ImGuiNavMoveFlags_LoopY,
        ImGuiNavMoveFlags_WrapX = C.ImGuiNavMoveFlags_WrapX,
        ImGuiNavMoveFlags_WrapY = C.ImGuiNavMoveFlags_WrapY,
        ImGuiNavMoveFlags_AllowCurrentNavId = C.ImGuiNavMoveFlags_AllowCurrentNavId,
        ImGuiNavMoveFlags_AlsoScoreVisibleSet = C.ImGuiNavMoveFlags_AlsoScoreVisibleSet,
        ImGuiNavMoveFlags_ScrollToEdge = C.ImGuiNavMoveFlags_ScrollToEdge,
    },
    ImGuiNavForward = {
        ImGuiNavForward_None = C.ImGuiNavForward_None,
        ImGuiNavForward_ForwardQueued = C.ImGuiNavForward_ForwardQueued,
        ImGuiNavForward_ForwardActive = C.ImGuiNavForward_ForwardActive,
    },
    ImGuiNavLayer = {
        ImGuiNavLayer_Main = C.ImGuiNavLayer_Main,
        ImGuiNavLayer_Menu = C.ImGuiNavLayer_Menu,
        ImGuiNavLayer_COUNT = C.ImGuiNavLayer_COUNT,
    },
    ImGuiPopupPositionPolicy = {
        ImGuiPopupPositionPolicy_Default = C.ImGuiPopupPositionPolicy_Default,
        ImGuiPopupPositionPolicy_ComboBox = C.ImGuiPopupPositionPolicy_ComboBox,
        ImGuiPopupPositionPolicy_Tooltip = C.ImGuiPopupPositionPolicy_Tooltip,
    },
    ImGuiDataTypePrivate_ = {
        ImGuiDataType_String = C.ImGuiDataType_String,
        ImGuiDataType_Pointer = C.ImGuiDataType_Pointer,
        ImGuiDataType_ID = C.ImGuiDataType_ID,
    },
    ImGuiNextWindowDataFlags_ = {
        ImGuiNextWindowDataFlags_None = C.ImGuiNextWindowDataFlags_None,
        ImGuiNextWindowDataFlags_HasPos = C.ImGuiNextWindowDataFlags_HasPos,
        ImGuiNextWindowDataFlags_HasSize = C.ImGuiNextWindowDataFlags_HasSize,
        ImGuiNextWindowDataFlags_HasContentSize = C.ImGuiNextWindowDataFlags_HasContentSize,
        ImGuiNextWindowDataFlags_HasCollapsed = C.ImGuiNextWindowDataFlags_HasCollapsed,
        ImGuiNextWindowDataFlags_HasSizeConstraint = C.ImGuiNextWindowDataFlags_HasSizeConstraint,
        ImGuiNextWindowDataFlags_HasFocus = C.ImGuiNextWindowDataFlags_HasFocus,
        ImGuiNextWindowDataFlags_HasBgAlpha = C.ImGuiNextWindowDataFlags_HasBgAlpha,
        ImGuiNextWindowDataFlags_HasScroll = C.ImGuiNextWindowDataFlags_HasScroll,
        ImGuiNextWindowDataFlags_HasViewport = C.ImGuiNextWindowDataFlags_HasViewport,
        ImGuiNextWindowDataFlags_HasDock = C.ImGuiNextWindowDataFlags_HasDock,
        ImGuiNextWindowDataFlags_HasWindowClass = C.ImGuiNextWindowDataFlags_HasWindowClass,
    },
    ImGuiNextItemDataFlags_ = {
        ImGuiNextItemDataFlags_None = C.ImGuiNextItemDataFlags_None,
        ImGuiNextItemDataFlags_HasWidth = C.ImGuiNextItemDataFlags_HasWidth,
        ImGuiNextItemDataFlags_HasOpen = C.ImGuiNextItemDataFlags_HasOpen,
    },
    ImGuiOldColumnFlags_ = {
        ImGuiOldColumnFlags_None = C.ImGuiOldColumnFlags_None,
        ImGuiOldColumnFlags_NoBorder = C.ImGuiOldColumnFlags_NoBorder,
        ImGuiOldColumnFlags_NoResize = C.ImGuiOldColumnFlags_NoResize,
        ImGuiOldColumnFlags_NoPreserveWidths = C.ImGuiOldColumnFlags_NoPreserveWidths,
        ImGuiOldColumnFlags_NoForceWithinWindow = C.ImGuiOldColumnFlags_NoForceWithinWindow,
        ImGuiOldColumnFlags_GrowParentContentsSize = C.ImGuiOldColumnFlags_GrowParentContentsSize,
        ImGuiColumnsFlags_None = C.ImGuiColumnsFlags_None,
        ImGuiColumnsFlags_NoBorder = C.ImGuiColumnsFlags_NoBorder,
        ImGuiColumnsFlags_NoResize = C.ImGuiColumnsFlags_NoResize,
        ImGuiColumnsFlags_NoPreserveWidths = C.ImGuiColumnsFlags_NoPreserveWidths,
        ImGuiColumnsFlags_NoForceWithinWindow = C.ImGuiColumnsFlags_NoForceWithinWindow,
        ImGuiColumnsFlags_GrowParentContentsSize = C.ImGuiColumnsFlags_GrowParentContentsSize,
    },
    ImGuiDockNodeFlagsPrivate_ = {
        ImGuiDockNodeFlags_DockSpace = C.ImGuiDockNodeFlags_DockSpace,
        ImGuiDockNodeFlags_CentralNode = C.ImGuiDockNodeFlags_CentralNode,
        ImGuiDockNodeFlags_NoTabBar = C.ImGuiDockNodeFlags_NoTabBar,
        ImGuiDockNodeFlags_HiddenTabBar = C.ImGuiDockNodeFlags_HiddenTabBar,
        ImGuiDockNodeFlags_NoWindowMenuButton = C.ImGuiDockNodeFlags_NoWindowMenuButton,
        ImGuiDockNodeFlags_NoCloseButton = C.ImGuiDockNodeFlags_NoCloseButton,
        ImGuiDockNodeFlags_NoDocking = C.ImGuiDockNodeFlags_NoDocking,
        ImGuiDockNodeFlags_NoDockingSplitMe = C.ImGuiDockNodeFlags_NoDockingSplitMe,
        ImGuiDockNodeFlags_NoDockingSplitOther = C.ImGuiDockNodeFlags_NoDockingSplitOther,
        ImGuiDockNodeFlags_NoDockingOverMe = C.ImGuiDockNodeFlags_NoDockingOverMe,
        ImGuiDockNodeFlags_NoDockingOverOther = C.ImGuiDockNodeFlags_NoDockingOverOther,
        ImGuiDockNodeFlags_NoDockingOverEmpty = C.ImGuiDockNodeFlags_NoDockingOverEmpty,
        ImGuiDockNodeFlags_NoResizeX = C.ImGuiDockNodeFlags_NoResizeX,
        ImGuiDockNodeFlags_NoResizeY = C.ImGuiDockNodeFlags_NoResizeY,
        ImGuiDockNodeFlags_SharedFlagsInheritMask_ = C.ImGuiDockNodeFlags_SharedFlagsInheritMask_,
        ImGuiDockNodeFlags_NoResizeFlagsMask_ = C.ImGuiDockNodeFlags_NoResizeFlagsMask_,
        ImGuiDockNodeFlags_LocalFlagsMask_ = C.ImGuiDockNodeFlags_LocalFlagsMask_,
        ImGuiDockNodeFlags_LocalFlagsTransferMask_ = C.ImGuiDockNodeFlags_LocalFlagsTransferMask_,
        ImGuiDockNodeFlags_SavedFlagsMask_ = C.ImGuiDockNodeFlags_SavedFlagsMask_,
    },
    ImGuiDataAuthority_ = {
        ImGuiDataAuthority_Auto = C.ImGuiDataAuthority_Auto,
        ImGuiDataAuthority_DockNode = C.ImGuiDataAuthority_DockNode,
        ImGuiDataAuthority_Window = C.ImGuiDataAuthority_Window,
    },
    ImGuiDockNodeState = {
        ImGuiDockNodeState_Unknown = C.ImGuiDockNodeState_Unknown,
        ImGuiDockNodeState_HostWindowHiddenBecauseSingleWindow = C.ImGuiDockNodeState_HostWindowHiddenBecauseSingleWindow,
        ImGuiDockNodeState_HostWindowHiddenBecauseWindowsAreResizing = C.ImGuiDockNodeState_HostWindowHiddenBecauseWindowsAreResizing,
        ImGuiDockNodeState_HostWindowVisible = C.ImGuiDockNodeState_HostWindowVisible,
    },
    ImGuiWindowDockStyleCol = {
        ImGuiWindowDockStyleCol_Text = C.ImGuiWindowDockStyleCol_Text,
        ImGuiWindowDockStyleCol_Tab = C.ImGuiWindowDockStyleCol_Tab,
        ImGuiWindowDockStyleCol_TabHovered = C.ImGuiWindowDockStyleCol_TabHovered,
        ImGuiWindowDockStyleCol_TabActive = C.ImGuiWindowDockStyleCol_TabActive,
        ImGuiWindowDockStyleCol_TabUnfocused = C.ImGuiWindowDockStyleCol_TabUnfocused,
        ImGuiWindowDockStyleCol_TabUnfocusedActive = C.ImGuiWindowDockStyleCol_TabUnfocusedActive,
        ImGuiWindowDockStyleCol_COUNT = C.ImGuiWindowDockStyleCol_COUNT,
    },
    ImGuiContextHookType = {
        ImGuiContextHookType_NewFramePre = C.ImGuiContextHookType_NewFramePre,
        ImGuiContextHookType_NewFramePost = C.ImGuiContextHookType_NewFramePost,
        ImGuiContextHookType_EndFramePre = C.ImGuiContextHookType_EndFramePre,
        ImGuiContextHookType_EndFramePost = C.ImGuiContextHookType_EndFramePost,
        ImGuiContextHookType_RenderPre = C.ImGuiContextHookType_RenderPre,
        ImGuiContextHookType_RenderPost = C.ImGuiContextHookType_RenderPost,
        ImGuiContextHookType_Shutdown = C.ImGuiContextHookType_Shutdown,
        ImGuiContextHookType_PendingRemoval_ = C.ImGuiContextHookType_PendingRemoval_,
    },
    ImGuiTabBarFlagsPrivate_ = {
        ImGuiTabBarFlags_DockNode = C.ImGuiTabBarFlags_DockNode,
        ImGuiTabBarFlags_IsFocused = C.ImGuiTabBarFlags_IsFocused,
        ImGuiTabBarFlags_SaveSettings = C.ImGuiTabBarFlags_SaveSettings,
    },
    ImGuiTabItemFlagsPrivate_ = {
        ImGuiTabItemFlags_SectionMask_ = C.ImGuiTabItemFlags_SectionMask_,
        ImGuiTabItemFlags_NoCloseButton = C.ImGuiTabItemFlags_NoCloseButton,
        ImGuiTabItemFlags_Button = C.ImGuiTabItemFlags_Button,
        ImGuiTabItemFlags_Unsorted = C.ImGuiTabItemFlags_Unsorted,
        ImGuiTabItemFlags_Preview = C.ImGuiTabItemFlags_Preview,
    },
}
---@class va_list
---@class GLFWwindow
---@class GLFWmonitor
---@class size_t
---@class StbUndoRecord
---@class StbUndoState
---@class STB_TexteditState
---@class GLADapiproc
---@class GLADloadfunc
---@class GLADuserptrloadfunc
---@class ImGuiCol
---@class ImGuiCond
---@class ImGuiDataType
---@class ImGuiDir
---@class ImGuiKey
---@class ImGuiMouseButton
---@class ImGuiMouseCursor
---@class ImGuiSortDirection
---@class ImGuiStyleVar
---@class ImGuiTableBgTarget
---@class ImDrawFlags
---@class ImDrawListFlags
---@class ImFontAtlasFlags
---@class ImGuiBackendFlags
---@class ImGuiButtonFlags
---@class ImGuiColorEditFlags
---@class ImGuiConfigFlags
---@class ImGuiComboFlags
---@class ImGuiDockNodeFlags
---@class ImGuiDragDropFlags
---@class ImGuiFocusedFlags
---@class ImGuiHoveredFlags
---@class ImGuiInputTextFlags
---@class ImGuiKeyModFlags
---@class ImGuiPopupFlags
---@class ImGuiSelectableFlags
---@class ImGuiSliderFlags
---@class ImGuiTabBarFlags
---@class ImGuiTabItemFlags
---@class ImGuiTableFlags
---@class ImGuiTableColumnFlags
---@class ImGuiTableRowFlags
---@class ImGuiTreeNodeFlags
---@class ImGuiViewportFlags
---@class ImGuiWindowFlags
---@class ImTextureID
---@class ImGuiID
---@class ImGuiInputTextCallback
---@class ImGuiSizeCallback
---@class ImGuiMemAllocFunc
---@class ImGuiMemFreeFunc
---@class ImWchar16
---@class ImWchar
---@class ImS8
---@class ImU8
---@class ImS16
---@class ImU16
---@class ImS32
---@class ImU32
---@class ImU64
---@class ImVec2
---@class ImVec4
---@class ImVector
---@class ImGuiStyle
---@class ImGuiIO
---@class ImGuiInputTextCallbackData
---@class ImGuiSizeCallbackData
---@class ImGuiWindowClass
---@class ImGuiPayload
---@class ImGuiTableColumnSortSpecs
---@class ImGuiTableSortSpecs
---@class ImGuiTextBuffer
---@class ImGuiStorage
---@class ImDrawCallback
---@class ImDrawCmd
---@class ImDrawIdx
---@class ImDrawVert
---@class ImDrawCmdHeader
---@class ImDrawChannel
---@class ImDrawListSplitter
---@class ImDrawList
---@class ImDrawData
---@class ImFontConfig
---@class ImFontGlyph
---@class ImFontAtlasCustomRect
---@class ImFontAtlas
---@class ImFont
---@class ImGuiViewport
---@class ImGuiPlatformIO
---@class ImGuiPlatformMonitor
---@class ImGuiDockRequest
---@class ImGuiDockNodeSettings
---@class ImGuiDataAuthority
---@class ImGuiLayoutType
---@class ImGuiItemFlags
---@class ImGuiItemStatusFlags
---@class ImGuiOldColumnFlags
---@class ImGuiNavMoveFlags
---@class ImGuiNextItemDataFlags
---@class ImGuiNextWindowDataFlags
---@class ImFileHandle
---@class ImVec1
---@class ImVec2ih
---@class ImRect
---@class ImSpan
---@class ImPoolIdx
---@class ImPool
---@class ImChunkStream
---@class ImDrawListSharedData
---@class ImDrawDataBuilder
---@class ImGuiColorMod
---@class ImGuiStyleMod
---@class ImGuiComboPreviewData
---@class ImGuiGroupData
---@class ImGuiMenuColumns
---@class ImGuiInputTextState
---@class ImGuiPopupData
---@class ImGuiNavItemData
---@class ImGuiNextWindowData
---@class ImGuiNextItemData
---@class ImGuiLastItemData
---@class ImGuiWindowStackData
---@class ImGuiShrinkWidthItem
---@class ImGuiPtrOrIndex
---@class ImGuiOldColumnData
---@class ImGuiOldColumns
---@class ImGuiDockNode
---@class ImGuiWindowDockStyle
---@class ImGuiDockContext
---@class ImGuiViewportP
---@class ImGuiWindowSettings
---@class ImGuiSettingsHandler
---@class ImGuiMetricsConfig
---@class ImGuiStackSizes
---@class ImGuiContextHookCallback
---@class ImGuiContextHook
---@class ImGuiContext
---@class ImGuiWindowTempData
---@class ImGuiWindow
---@class ImGuiTabItem
---@class ImGuiTabBar
---@class ImGuiTableColumnIdx
---@class ImGuiTableDrawChannelIdx
---@class ImGuiTableColumn
---@class ImGuiTableCellData
---@class ImGuiTable
---@class ImGuiTableTempData
---@class ImGuiTableColumnSettings
---@class ImGuiTableSettings
---@class ImFontBuilderIO
---@class _iobuf
---@class FILE
-----------------------------------------------------------------------------
-- imgui.dll
-----------------------------------------------------------------------------
---@type Table<string, any>
local imgui = ffi.load('imgui')
M.cache.imgui = imgui
M.libs.imgui = {
    ---@type fun(window:any, install_callbacks:boolean):boolean
    ImGui_ImplGlfw_InitForOpenGL = imgui.ImGui_ImplGlfw_InitForOpenGL,
    ---@type fun(window:any, install_callbacks:boolean):boolean
    ImGui_ImplGlfw_InitForVulkan = imgui.ImGui_ImplGlfw_InitForVulkan,
    ---@type fun(window:any, install_callbacks:boolean):boolean
    ImGui_ImplGlfw_InitForOther = imgui.ImGui_ImplGlfw_InitForOther,
    ---@type fun():nil
    ImGui_ImplGlfw_Shutdown = imgui.ImGui_ImplGlfw_Shutdown,
    ---@type fun():nil
    ImGui_ImplGlfw_NewFrame = imgui.ImGui_ImplGlfw_NewFrame,
    ---@type fun(window:any, button:integer, action:integer, mods:integer):nil
    ImGui_ImplGlfw_MouseButtonCallback = imgui.ImGui_ImplGlfw_MouseButtonCallback,
    ---@type fun(window:any, xoffset:number, yoffset:number):nil
    ImGui_ImplGlfw_ScrollCallback = imgui.ImGui_ImplGlfw_ScrollCallback,
    ---@type fun(window:any, key:integer, scancode:integer, action:integer, mods:integer):nil
    ImGui_ImplGlfw_KeyCallback = imgui.ImGui_ImplGlfw_KeyCallback,
    ---@type fun(window:any, c:integer):nil
    ImGui_ImplGlfw_CharCallback = imgui.ImGui_ImplGlfw_CharCallback,
    ---@type fun(monitor:any, event:integer):nil
    ImGui_ImplGlfw_MonitorCallback = imgui.ImGui_ImplGlfw_MonitorCallback,
    ---@param shared_font_atlas any
    CreateContext = function(shared_font_atlas)
        return imgui.CreateContext(shared_font_atlas)
    end,
    ---@param ctx any
    DestroyContext = function(ctx)
        return imgui.DestroyContext(ctx)
    end,
    ---@type fun():any
    GetCurrentContext = imgui.GetCurrentContext,
    ---@type fun(ctx:any):nil
    SetCurrentContext = imgui.SetCurrentContext,
    ---@type fun():any
    GetIO = imgui.GetIO,
    ---@type fun():any
    GetStyle = imgui.GetStyle,
    ---@type fun():nil
    NewFrame = imgui.NewFrame,
    ---@type fun():nil
    EndFrame = imgui.EndFrame,
    ---@type fun():nil
    Render = imgui.Render,
    ---@type fun():any
    GetDrawData = imgui.GetDrawData,
    ---@param p_open any
    ShowDemoWindow = function(p_open)
        return imgui.ShowDemoWindow(p_open)
    end,
    ---@param p_open any
    ShowMetricsWindow = function(p_open)
        return imgui.ShowMetricsWindow(p_open)
    end,
    ---@param p_open any
    ShowAboutWindow = function(p_open)
        return imgui.ShowAboutWindow(p_open)
    end,
    ---@param ref any
    ShowStyleEditor = function(ref)
        return imgui.ShowStyleEditor(ref)
    end,
    ---@type fun(label:string):boolean
    ShowStyleSelector = imgui.ShowStyleSelector,
    ---@type fun(label:string):nil
    ShowFontSelector = imgui.ShowFontSelector,
    ---@type fun():nil
    ShowUserGuide = imgui.ShowUserGuide,
    ---@type fun():string
    GetVersion = imgui.GetVersion,
    ---@param dst any
    StyleColorsDark = function(dst)
        return imgui.StyleColorsDark(dst)
    end,
    ---@param dst any
    StyleColorsLight = function(dst)
        return imgui.StyleColorsLight(dst)
    end,
    ---@param dst any
    StyleColorsClassic = function(dst)
        return imgui.StyleColorsClassic(dst)
    end,
    ---@param name string
    ---@param p_open any
    ---@param flags ImGuiWindowFlags
    Begin = function(name, p_open, flags)
        flags = flags or 0
        return imgui.Begin(name, p_open, flags)
    end,
    ---@type fun():nil
    End = imgui.End,
    ---@param str_id string
    ---@param size any
    ---@param border boolean
    ---@param flags ImGuiWindowFlags
    BeginChild = function(str_id, size, border, flags)
        size = size or ffi.new('struct ImVec2')
        border = border or false
        flags = flags or 0
        return imgui.BeginChild(str_id, size, border, flags)
    end,
    ---@param id ImGuiID
    ---@param size any
    ---@param border boolean
    ---@param flags ImGuiWindowFlags
    BeginChild__1 = function(id, size, border, flags)
        size = size or ffi.new('struct ImVec2')
        border = border or false
        flags = flags or 0
        return imgui.BeginChild__1(id, size, border, flags)
    end,
    ---@type fun():nil
    EndChild = imgui.EndChild,
    ---@type fun():boolean
    IsWindowAppearing = imgui.IsWindowAppearing,
    ---@type fun():boolean
    IsWindowCollapsed = imgui.IsWindowCollapsed,
    ---@param flags ImGuiFocusedFlags
    IsWindowFocused = function(flags)
        flags = flags or 0
        return imgui.IsWindowFocused(flags)
    end,
    ---@param flags ImGuiHoveredFlags
    IsWindowHovered = function(flags)
        flags = flags or 0
        return imgui.IsWindowHovered(flags)
    end,
    ---@type fun():any
    GetWindowDrawList = imgui.GetWindowDrawList,
    ---@type fun():number
    GetWindowDpiScale = imgui.GetWindowDpiScale,
    ---@type fun():ImVec2
    GetWindowPos = imgui.GetWindowPos,
    ---@type fun():ImVec2
    GetWindowSize = imgui.GetWindowSize,
    ---@type fun():number
    GetWindowWidth = imgui.GetWindowWidth,
    ---@type fun():number
    GetWindowHeight = imgui.GetWindowHeight,
    ---@type fun():any
    GetWindowViewport = imgui.GetWindowViewport,
    ---@param pos any
    ---@param cond ImGuiCond
    ---@param pivot any
    SetNextWindowPos = function(pos, cond, pivot)
        cond = cond or 0
        pivot = pivot or ffi.new('struct ImVec2')
        return imgui.SetNextWindowPos(pos, cond, pivot)
    end,
    ---@param size any
    ---@param cond ImGuiCond
    SetNextWindowSize = function(size, cond)
        cond = cond or 0
        return imgui.SetNextWindowSize(size, cond)
    end,
    ---@param size_min any
    ---@param size_max any
    ---@param custom_callback ImGuiSizeCallback
    ---@param custom_callback_data any
    SetNextWindowSizeConstraints = function(size_min, size_max, custom_callback, custom_callback_data)
        return imgui.SetNextWindowSizeConstraints(size_min, size_max, custom_callback, custom_callback_data)
    end,
    ---@type fun(size:any):nil
    SetNextWindowContentSize = imgui.SetNextWindowContentSize,
    ---@param collapsed boolean
    ---@param cond ImGuiCond
    SetNextWindowCollapsed = function(collapsed, cond)
        cond = cond or 0
        return imgui.SetNextWindowCollapsed(collapsed, cond)
    end,
    ---@type fun():nil
    SetNextWindowFocus = imgui.SetNextWindowFocus,
    ---@type fun(alpha:number):nil
    SetNextWindowBgAlpha = imgui.SetNextWindowBgAlpha,
    ---@type fun(viewport_id:ImGuiID):nil
    SetNextWindowViewport = imgui.SetNextWindowViewport,
    ---@param pos any
    ---@param cond ImGuiCond
    SetWindowPos = function(pos, cond)
        cond = cond or 0
        return imgui.SetWindowPos(pos, cond)
    end,
    ---@param name string
    ---@param pos any
    ---@param cond ImGuiCond
    SetWindowPos__1 = function(name, pos, cond)
        cond = cond or 0
        return imgui.SetWindowPos__1(name, pos, cond)
    end,
    ---@param size any
    ---@param cond ImGuiCond
    SetWindowSize = function(size, cond)
        cond = cond or 0
        return imgui.SetWindowSize(size, cond)
    end,
    ---@param name string
    ---@param size any
    ---@param cond ImGuiCond
    SetWindowSize__1 = function(name, size, cond)
        cond = cond or 0
        return imgui.SetWindowSize__1(name, size, cond)
    end,
    ---@param collapsed boolean
    ---@param cond ImGuiCond
    SetWindowCollapsed = function(collapsed, cond)
        cond = cond or 0
        return imgui.SetWindowCollapsed(collapsed, cond)
    end,
    ---@param name string
    ---@param collapsed boolean
    ---@param cond ImGuiCond
    SetWindowCollapsed__1 = function(name, collapsed, cond)
        cond = cond or 0
        return imgui.SetWindowCollapsed__1(name, collapsed, cond)
    end,
    ---@type fun():nil
    SetWindowFocus = imgui.SetWindowFocus,
    ---@type fun(name:string):nil
    SetWindowFocus__1 = imgui.SetWindowFocus__1,
    ---@type fun(scale:number):nil
    SetWindowFontScale = imgui.SetWindowFontScale,
    ---@type fun():ImVec2
    GetContentRegionAvail = imgui.GetContentRegionAvail,
    ---@type fun():ImVec2
    GetContentRegionMax = imgui.GetContentRegionMax,
    ---@type fun():ImVec2
    GetWindowContentRegionMin = imgui.GetWindowContentRegionMin,
    ---@type fun():ImVec2
    GetWindowContentRegionMax = imgui.GetWindowContentRegionMax,
    ---@type fun():number
    GetWindowContentRegionWidth = imgui.GetWindowContentRegionWidth,
    ---@type fun():number
    GetScrollX = imgui.GetScrollX,
    ---@type fun():number
    GetScrollY = imgui.GetScrollY,
    ---@type fun(scroll_x:number):nil
    SetScrollX = imgui.SetScrollX,
    ---@type fun(scroll_y:number):nil
    SetScrollY = imgui.SetScrollY,
    ---@type fun():number
    GetScrollMaxX = imgui.GetScrollMaxX,
    ---@type fun():number
    GetScrollMaxY = imgui.GetScrollMaxY,
    ---@param center_x_ratio number
    SetScrollHereX = function(center_x_ratio)
        center_x_ratio = center_x_ratio or 0.5
        return imgui.SetScrollHereX(center_x_ratio)
    end,
    ---@param center_y_ratio number
    SetScrollHereY = function(center_y_ratio)
        center_y_ratio = center_y_ratio or 0.5
        return imgui.SetScrollHereY(center_y_ratio)
    end,
    ---@param local_x number
    ---@param center_x_ratio number
    SetScrollFromPosX = function(local_x, center_x_ratio)
        center_x_ratio = center_x_ratio or 0.5
        return imgui.SetScrollFromPosX(local_x, center_x_ratio)
    end,
    ---@param local_y number
    ---@param center_y_ratio number
    SetScrollFromPosY = function(local_y, center_y_ratio)
        center_y_ratio = center_y_ratio or 0.5
        return imgui.SetScrollFromPosY(local_y, center_y_ratio)
    end,
    ---@type fun(font:any):nil
    PushFont = imgui.PushFont,
    ---@type fun():nil
    PopFont = imgui.PopFont,
    ---@type fun(idx:ImGuiCol, col:ImU32):nil
    PushStyleColor = imgui.PushStyleColor,
    ---@type fun(idx:ImGuiCol, col:any):nil
    PushStyleColor__1 = imgui.PushStyleColor__1,
    ---@param count integer
    PopStyleColor = function(count)
        count = count or 1
        return imgui.PopStyleColor(count)
    end,
    ---@type fun(idx:ImGuiStyleVar, val:number):nil
    PushStyleVar = imgui.PushStyleVar,
    ---@type fun(idx:ImGuiStyleVar, val:any):nil
    PushStyleVar__1 = imgui.PushStyleVar__1,
    ---@param count integer
    PopStyleVar = function(count)
        count = count or 1
        return imgui.PopStyleVar(count)
    end,
    ---@type fun(allow_keyboard_focus:boolean):nil
    PushAllowKeyboardFocus = imgui.PushAllowKeyboardFocus,
    ---@type fun():nil
    PopAllowKeyboardFocus = imgui.PopAllowKeyboardFocus,
    ---@type fun(repeat_:boolean):nil
    PushButtonRepeat = imgui.PushButtonRepeat,
    ---@type fun():nil
    PopButtonRepeat = imgui.PopButtonRepeat,
    ---@type fun(item_width:number):nil
    PushItemWidth = imgui.PushItemWidth,
    ---@type fun():nil
    PopItemWidth = imgui.PopItemWidth,
    ---@type fun(item_width:number):nil
    SetNextItemWidth = imgui.SetNextItemWidth,
    ---@type fun():number
    CalcItemWidth = imgui.CalcItemWidth,
    ---@param wrap_local_pos_x number
    PushTextWrapPos = function(wrap_local_pos_x)
        wrap_local_pos_x = wrap_local_pos_x or 0.0
        return imgui.PushTextWrapPos(wrap_local_pos_x)
    end,
    ---@type fun():nil
    PopTextWrapPos = imgui.PopTextWrapPos,
    ---@type fun():any
    GetFont = imgui.GetFont,
    ---@type fun():number
    GetFontSize = imgui.GetFontSize,
    ---@type fun():ImVec2
    GetFontTexUvWhitePixel = imgui.GetFontTexUvWhitePixel,
    ---@param idx ImGuiCol
    ---@param alpha_mul number
    GetColorU32 = function(idx, alpha_mul)
        alpha_mul = alpha_mul or 1.0
        return imgui.GetColorU32(idx, alpha_mul)
    end,
    ---@type fun(col:any):ImU32
    GetColorU32__1 = imgui.GetColorU32__1,
    ---@type fun(col:ImU32):ImU32
    GetColorU32__2 = imgui.GetColorU32__2,
    ---@type fun(idx:ImGuiCol):any
    GetStyleColorVec4 = imgui.GetStyleColorVec4,
    ---@type fun():nil
    Separator = imgui.Separator,
    ---@param offset_from_start_x number
    ---@param spacing number
    SameLine = function(offset_from_start_x, spacing)
        offset_from_start_x = offset_from_start_x or 0.0
        spacing = spacing or 1.0
        return imgui.SameLine(offset_from_start_x, spacing)
    end,
    ---@type fun():nil
    NewLine = imgui.NewLine,
    ---@type fun():nil
    Spacing = imgui.Spacing,
    ---@type fun(size:any):nil
    Dummy = imgui.Dummy,
    ---@param indent_w number
    Indent = function(indent_w)
        indent_w = indent_w or 0.0
        return imgui.Indent(indent_w)
    end,
    ---@param indent_w number
    Unindent = function(indent_w)
        indent_w = indent_w or 0.0
        return imgui.Unindent(indent_w)
    end,
    ---@type fun():nil
    BeginGroup = imgui.BeginGroup,
    ---@type fun():nil
    EndGroup = imgui.EndGroup,
    ---@type fun():ImVec2
    GetCursorPos = imgui.GetCursorPos,
    ---@type fun():number
    GetCursorPosX = imgui.GetCursorPosX,
    ---@type fun():number
    GetCursorPosY = imgui.GetCursorPosY,
    ---@type fun(local_pos:any):nil
    SetCursorPos = imgui.SetCursorPos,
    ---@type fun(local_x:number):nil
    SetCursorPosX = imgui.SetCursorPosX,
    ---@type fun(local_y:number):nil
    SetCursorPosY = imgui.SetCursorPosY,
    ---@type fun():ImVec2
    GetCursorStartPos = imgui.GetCursorStartPos,
    ---@type fun():ImVec2
    GetCursorScreenPos = imgui.GetCursorScreenPos,
    ---@type fun(pos:any):nil
    SetCursorScreenPos = imgui.SetCursorScreenPos,
    ---@type fun():nil
    AlignTextToFramePadding = imgui.AlignTextToFramePadding,
    ---@type fun():number
    GetTextLineHeight = imgui.GetTextLineHeight,
    ---@type fun():number
    GetTextLineHeightWithSpacing = imgui.GetTextLineHeightWithSpacing,
    ---@type fun():number
    GetFrameHeight = imgui.GetFrameHeight,
    ---@type fun():number
    GetFrameHeightWithSpacing = imgui.GetFrameHeightWithSpacing,
    ---@type fun(str_id:string):nil
    PushID = imgui.PushID,
    ---@type fun(str_id_begin:string, str_id_end:string):nil
    PushID__1 = imgui.PushID__1,
    ---@type fun(ptr_id:any):nil
    PushID__2 = imgui.PushID__2,
    ---@type fun(int_id:integer):nil
    PushID__3 = imgui.PushID__3,
    ---@type fun():nil
    PopID = imgui.PopID,
    ---@type fun(str_id:string):ImGuiID
    GetID = imgui.GetID,
    ---@type fun(str_id_begin:string, str_id_end:string):ImGuiID
    GetID__1 = imgui.GetID__1,
    ---@type fun(ptr_id:any):ImGuiID
    GetID__2 = imgui.GetID__2,
    ---@param text string
    ---@param text_end string
    TextUnformatted = function(text, text_end)
        return imgui.TextUnformatted(text, text_end)
    end,
    ---@type fun(fmt:string, ...):nil
    Text = imgui.Text,
    ---@type fun(fmt:string, args:va_list):nil
    TextV = imgui.TextV,
    ---@type fun(col:any, fmt:string, ...):nil
    TextColored = imgui.TextColored,
    ---@type fun(col:any, fmt:string, args:va_list):nil
    TextColoredV = imgui.TextColoredV,
    ---@type fun(fmt:string, ...):nil
    TextDisabled = imgui.TextDisabled,
    ---@type fun(fmt:string, args:va_list):nil
    TextDisabledV = imgui.TextDisabledV,
    ---@type fun(fmt:string, ...):nil
    TextWrapped = imgui.TextWrapped,
    ---@type fun(fmt:string, args:va_list):nil
    TextWrappedV = imgui.TextWrappedV,
    ---@type fun(label:string, fmt:string, ...):nil
    LabelText = imgui.LabelText,
    ---@type fun(label:string, fmt:string, args:va_list):nil
    LabelTextV = imgui.LabelTextV,
    ---@type fun(fmt:string, ...):nil
    BulletText = imgui.BulletText,
    ---@type fun(fmt:string, args:va_list):nil
    BulletTextV = imgui.BulletTextV,
    ---@param label string
    ---@param size any
    Button = function(label, size)
        size = size or ffi.new('struct ImVec2')
        return imgui.Button(label, size)
    end,
    ---@type fun(label:string):boolean
    SmallButton = imgui.SmallButton,
    ---@param str_id string
    ---@param size any
    ---@param flags ImGuiButtonFlags
    InvisibleButton = function(str_id, size, flags)
        flags = flags or 0
        return imgui.InvisibleButton(str_id, size, flags)
    end,
    ---@type fun(str_id:string, dir:ImGuiDir):boolean
    ArrowButton = imgui.ArrowButton,
    ---@param user_texture_id ImTextureID
    ---@param size any
    ---@param uv0 any
    ---@param uv1 any
    ---@param tint_col any
    ---@param border_col any
    Image = function(user_texture_id, size, uv0, uv1, tint_col, border_col)
        uv0 = uv0 or ffi.new('struct ImVec2')
        uv1 = uv1 or ffi.new('struct ImVec2', 1, 1)
        tint_col = tint_col or ffi.new('struct ImVec4', 1, 1, 1, 1)
        border_col = border_col or ffi.new('struct ImVec4')
        return imgui.Image(user_texture_id, size, uv0, uv1, tint_col, border_col)
    end,
    ---@param user_texture_id ImTextureID
    ---@param size any
    ---@param uv0 any
    ---@param uv1 any
    ---@param frame_padding integer
    ---@param bg_col any
    ---@param tint_col any
    ImageButton = function(user_texture_id, size, uv0, uv1, frame_padding, bg_col, tint_col)
        uv0 = uv0 or ffi.new('struct ImVec2')
        uv1 = uv1 or ffi.new('struct ImVec2', 1, 1)
        frame_padding = frame_padding or 1
        bg_col = bg_col or ffi.new('struct ImVec4')
        tint_col = tint_col or ffi.new('struct ImVec4', 1, 1, 1, 1)
        return imgui.ImageButton(user_texture_id, size, uv0, uv1, frame_padding, bg_col, tint_col)
    end,
    ---@type fun(label:string, v:any):boolean
    Checkbox = imgui.Checkbox,
    ---@type fun(label:string, flags:any, flags_value:integer):boolean
    CheckboxFlags = imgui.CheckboxFlags,
    ---@type fun(label:string, flags:any, flags_value:integer):boolean
    CheckboxFlags__1 = imgui.CheckboxFlags__1,
    ---@type fun(label:string, active:boolean):boolean
    RadioButton = imgui.RadioButton,
    ---@type fun(label:string, v:any, v_button:integer):boolean
    RadioButton__1 = imgui.RadioButton__1,
    ---@param fraction number
    ---@param size_arg any
    ---@param overlay string
    ProgressBar = function(fraction, size_arg, overlay)
        size_arg = size_arg or ffi.new('struct ImVec2', -1.175494351e-38, 0)
        return imgui.ProgressBar(fraction, size_arg, overlay)
    end,
    ---@type fun():nil
    Bullet = imgui.Bullet,
    ---@param label string
    ---@param preview_value string
    ---@param flags ImGuiComboFlags
    BeginCombo = function(label, preview_value, flags)
        flags = flags or 0
        return imgui.BeginCombo(label, preview_value, flags)
    end,
    ---@type fun():nil
    EndCombo = imgui.EndCombo,
    ---@param label string
    ---@param current_item any
    ---@param items any
    ---@param items_count integer
    ---@param popup_max_height_in_items integer
    Combo = function(label, current_item, items, items_count, popup_max_height_in_items)
        popup_max_height_in_items = popup_max_height_in_items or 1
        return imgui.Combo(label, current_item, items, items_count, popup_max_height_in_items)
    end,
    ---@param label string
    ---@param current_item any
    ---@param items_separated_by_zeros string
    ---@param popup_max_height_in_items integer
    Combo__1 = function(label, current_item, items_separated_by_zeros, popup_max_height_in_items)
        popup_max_height_in_items = popup_max_height_in_items or 1
        return imgui.Combo__1(label, current_item, items_separated_by_zeros, popup_max_height_in_items)
    end,
    ---@param label string
    ---@param current_item any
    ---@param items_getter any
    ---@param data any
    ---@param items_count integer
    ---@param popup_max_height_in_items integer
    Combo__2 = function(label, current_item, items_getter, data, items_count, popup_max_height_in_items)
        popup_max_height_in_items = popup_max_height_in_items or 1
        return imgui.Combo__2(label, current_item, items_getter, data, items_count, popup_max_height_in_items)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragFloat = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0.0
        v_max = v_max or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.DragFloat(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragFloat2 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0.0
        v_max = v_max or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.DragFloat2(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragFloat3 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0.0
        v_max = v_max or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.DragFloat3(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragFloat4 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0.0
        v_max = v_max or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.DragFloat4(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v_current_min any
    ---@param v_current_max any
    ---@param v_speed number
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param format_max string
    ---@param flags ImGuiSliderFlags
    DragFloatRange2 = function(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0.0
        v_max = v_max or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.DragFloatRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragInt = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0
        v_max = v_max or 0
        format = format or "%d"
        flags = flags or 0
        return imgui.DragInt(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragInt2 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0
        v_max = v_max or 0
        format = format or "%d"
        flags = flags or 0
        return imgui.DragInt2(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragInt3 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0
        v_max = v_max or 0
        format = format or "%d"
        flags = flags or 0
        return imgui.DragInt3(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_speed number
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragInt4 = function(label, v, v_speed, v_min, v_max, format, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0
        v_max = v_max or 0
        format = format or "%d"
        flags = flags or 0
        return imgui.DragInt4(label, v, v_speed, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v_current_min any
    ---@param v_current_max any
    ---@param v_speed number
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param format_max string
    ---@param flags ImGuiSliderFlags
    DragIntRange2 = function(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags)
        v_speed = v_speed or 1.0
        v_min = v_min or 0
        v_max = v_max or 0
        format = format or "%d"
        flags = flags or 0
        return imgui.DragIntRange2(label, v_current_min, v_current_max, v_speed, v_min, v_max, format, format_max, flags)
    end,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param v_speed number
    ---@param p_min any
    ---@param p_max any
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragScalar = function(label, data_type, p_data, v_speed, p_min, p_max, format, flags)
        v_speed = v_speed or 1.0
        flags = flags or 0
        return imgui.DragScalar(label, data_type, p_data, v_speed, p_min, p_max, format, flags)
    end,
    ---@type fun(label:string, data_type:ImGuiDataType, p_data:any, v_speed:number, p_min:any, p_max:any, format:string, power:number):boolean
    DragScalar__1 = imgui.DragScalar__1,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param components integer
    ---@param v_speed number
    ---@param p_min any
    ---@param p_max any
    ---@param format string
    ---@param flags ImGuiSliderFlags
    DragScalarN = function(label, data_type, p_data, components, v_speed, p_min, p_max, format, flags)
        v_speed = v_speed or 1.0
        flags = flags or 0
        return imgui.DragScalarN(label, data_type, p_data, components, v_speed, p_min, p_max, format, flags)
    end,
    ---@type fun(label:string, data_type:ImGuiDataType, p_data:any, components:integer, v_speed:number, p_min:any, p_max:any, format:string, power:number):boolean
    DragScalarN__1 = imgui.DragScalarN__1,
    ---@param label string
    ---@param v any
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderFloat = function(label, v, v_min, v_max, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.SliderFloat(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderFloat2 = function(label, v, v_min, v_max, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.SliderFloat2(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderFloat3 = function(label, v, v_min, v_max, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.SliderFloat3(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderFloat4 = function(label, v, v_min, v_max, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.SliderFloat4(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v_rad any
    ---@param v_degrees_min number
    ---@param v_degrees_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderAngle = function(label, v_rad, v_degrees_min, v_degrees_max, format, flags)
        v_degrees_min = v_degrees_min or 360.0
        v_degrees_max = v_degrees_max or 360.0
        format = format or "%.0f deg"
        flags = flags or 0
        return imgui.SliderAngle(label, v_rad, v_degrees_min, v_degrees_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderInt = function(label, v, v_min, v_max, format, flags)
        format = format or "%d"
        flags = flags or 0
        return imgui.SliderInt(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderInt2 = function(label, v, v_min, v_max, format, flags)
        format = format or "%d"
        flags = flags or 0
        return imgui.SliderInt2(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderInt3 = function(label, v, v_min, v_max, format, flags)
        format = format or "%d"
        flags = flags or 0
        return imgui.SliderInt3(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderInt4 = function(label, v, v_min, v_max, format, flags)
        format = format or "%d"
        flags = flags or 0
        return imgui.SliderInt4(label, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param p_min any
    ---@param p_max any
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderScalar = function(label, data_type, p_data, p_min, p_max, format, flags)
        flags = flags or 0
        return imgui.SliderScalar(label, data_type, p_data, p_min, p_max, format, flags)
    end,
    ---@type fun(label:string, data_type:ImGuiDataType, p_data:any, p_min:any, p_max:any, format:string, power:number):boolean
    SliderScalar__1 = imgui.SliderScalar__1,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param components integer
    ---@param p_min any
    ---@param p_max any
    ---@param format string
    ---@param flags ImGuiSliderFlags
    SliderScalarN = function(label, data_type, p_data, components, p_min, p_max, format, flags)
        flags = flags or 0
        return imgui.SliderScalarN(label, data_type, p_data, components, p_min, p_max, format, flags)
    end,
    ---@type fun(label:string, data_type:ImGuiDataType, p_data:any, components:integer, p_min:any, p_max:any, format:string, power:number):boolean
    SliderScalarN__1 = imgui.SliderScalarN__1,
    ---@param label string
    ---@param size any
    ---@param v any
    ---@param v_min number
    ---@param v_max number
    ---@param format string
    ---@param flags ImGuiSliderFlags
    VSliderFloat = function(label, size, v, v_min, v_max, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.VSliderFloat(label, size, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param size any
    ---@param v any
    ---@param v_min integer
    ---@param v_max integer
    ---@param format string
    ---@param flags ImGuiSliderFlags
    VSliderInt = function(label, size, v, v_min, v_max, format, flags)
        format = format or "%d"
        flags = flags or 0
        return imgui.VSliderInt(label, size, v, v_min, v_max, format, flags)
    end,
    ---@param label string
    ---@param size any
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param p_min any
    ---@param p_max any
    ---@param format string
    ---@param flags ImGuiSliderFlags
    VSliderScalar = function(label, size, data_type, p_data, p_min, p_max, format, flags)
        flags = flags or 0
        return imgui.VSliderScalar(label, size, data_type, p_data, p_min, p_max, format, flags)
    end,
    ---@param label string
    ---@param buf any
    ---@param buf_size size_t
    ---@param flags ImGuiInputTextFlags
    ---@param callback ImGuiInputTextCallback
    ---@param user_data any
    InputText = function(label, buf, buf_size, flags, callback, user_data)
        flags = flags or 0
        return imgui.InputText(label, buf, buf_size, flags, callback, user_data)
    end,
    ---@param label string
    ---@param buf any
    ---@param buf_size size_t
    ---@param size any
    ---@param flags ImGuiInputTextFlags
    ---@param callback ImGuiInputTextCallback
    ---@param user_data any
    InputTextMultiline = function(label, buf, buf_size, size, flags, callback, user_data)
        size = size or ffi.new('struct ImVec2')
        flags = flags or 0
        return imgui.InputTextMultiline(label, buf, buf_size, size, flags, callback, user_data)
    end,
    ---@param label string
    ---@param hint string
    ---@param buf any
    ---@param buf_size size_t
    ---@param flags ImGuiInputTextFlags
    ---@param callback ImGuiInputTextCallback
    ---@param user_data any
    InputTextWithHint = function(label, hint, buf, buf_size, flags, callback, user_data)
        flags = flags or 0
        return imgui.InputTextWithHint(label, hint, buf, buf_size, flags, callback, user_data)
    end,
    ---@param label string
    ---@param v any
    ---@param step number
    ---@param step_fast number
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputFloat = function(label, v, step, step_fast, format, flags)
        step = step or 0.0
        step_fast = step_fast or 0.0
        format = format or "%.3f"
        flags = flags or 0
        return imgui.InputFloat(label, v, step, step_fast, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputFloat2 = function(label, v, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.InputFloat2(label, v, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputFloat3 = function(label, v, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.InputFloat3(label, v, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputFloat4 = function(label, v, format, flags)
        format = format or "%.3f"
        flags = flags or 0
        return imgui.InputFloat4(label, v, format, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param step integer
    ---@param step_fast integer
    ---@param flags ImGuiInputTextFlags
    InputInt = function(label, v, step, step_fast, flags)
        step = step or 1
        step_fast = step_fast or 100
        flags = flags or 0
        return imgui.InputInt(label, v, step, step_fast, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param flags ImGuiInputTextFlags
    InputInt2 = function(label, v, flags)
        flags = flags or 0
        return imgui.InputInt2(label, v, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param flags ImGuiInputTextFlags
    InputInt3 = function(label, v, flags)
        flags = flags or 0
        return imgui.InputInt3(label, v, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param flags ImGuiInputTextFlags
    InputInt4 = function(label, v, flags)
        flags = flags or 0
        return imgui.InputInt4(label, v, flags)
    end,
    ---@param label string
    ---@param v any
    ---@param step number
    ---@param step_fast number
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputDouble = function(label, v, step, step_fast, format, flags)
        step = step or 0.0
        step_fast = step_fast or 0.0
        format = format or "%.6f"
        flags = flags or 0
        return imgui.InputDouble(label, v, step, step_fast, format, flags)
    end,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param p_step any
    ---@param p_step_fast any
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputScalar = function(label, data_type, p_data, p_step, p_step_fast, format, flags)
        flags = flags or 0
        return imgui.InputScalar(label, data_type, p_data, p_step, p_step_fast, format, flags)
    end,
    ---@param label string
    ---@param data_type ImGuiDataType
    ---@param p_data any
    ---@param components integer
    ---@param p_step any
    ---@param p_step_fast any
    ---@param format string
    ---@param flags ImGuiInputTextFlags
    InputScalarN = function(label, data_type, p_data, components, p_step, p_step_fast, format, flags)
        flags = flags or 0
        return imgui.InputScalarN(label, data_type, p_data, components, p_step, p_step_fast, format, flags)
    end,
    ---@param label string
    ---@param col any
    ---@param flags ImGuiColorEditFlags
    ColorEdit3 = function(label, col, flags)
        flags = flags or 0
        return imgui.ColorEdit3(label, col, flags)
    end,
    ---@param label string
    ---@param col any
    ---@param flags ImGuiColorEditFlags
    ColorEdit4 = function(label, col, flags)
        flags = flags or 0
        return imgui.ColorEdit4(label, col, flags)
    end,
    ---@param label string
    ---@param col any
    ---@param flags ImGuiColorEditFlags
    ColorPicker3 = function(label, col, flags)
        flags = flags or 0
        return imgui.ColorPicker3(label, col, flags)
    end,
    ---@param label string
    ---@param col any
    ---@param flags ImGuiColorEditFlags
    ---@param ref_col any
    ColorPicker4 = function(label, col, flags, ref_col)
        flags = flags or 0
        return imgui.ColorPicker4(label, col, flags, ref_col)
    end,
    ---@param desc_id string
    ---@param col any
    ---@param flags ImGuiColorEditFlags
    ---@param size ImVec2
    ColorButton = function(desc_id, col, flags, size)
        flags = flags or 0
        size = size or ffi.new('struct ImVec2')
        return imgui.ColorButton(desc_id, col, flags, size)
    end,
    ---@type fun(flags:ImGuiColorEditFlags):nil
    SetColorEditOptions = imgui.SetColorEditOptions,
    ---@type fun(label:string):boolean
    TreeNode = imgui.TreeNode,
    ---@type fun(str_id:string, fmt:string, ...):boolean
    TreeNode__1 = imgui.TreeNode__1,
    ---@type fun(ptr_id:any, fmt:string, ...):boolean
    TreeNode__2 = imgui.TreeNode__2,
    ---@type fun(str_id:string, fmt:string, args:va_list):boolean
    TreeNodeV = imgui.TreeNodeV,
    ---@type fun(ptr_id:any, fmt:string, args:va_list):boolean
    TreeNodeV__1 = imgui.TreeNodeV__1,
    ---@param label string
    ---@param flags ImGuiTreeNodeFlags
    TreeNodeEx = function(label, flags)
        flags = flags or 0
        return imgui.TreeNodeEx(label, flags)
    end,
    ---@type fun(str_id:string, flags:ImGuiTreeNodeFlags, fmt:string, ...):boolean
    TreeNodeEx__1 = imgui.TreeNodeEx__1,
    ---@type fun(ptr_id:any, flags:ImGuiTreeNodeFlags, fmt:string, ...):boolean
    TreeNodeEx__2 = imgui.TreeNodeEx__2,
    ---@type fun(str_id:string, flags:ImGuiTreeNodeFlags, fmt:string, args:va_list):boolean
    TreeNodeExV = imgui.TreeNodeExV,
    ---@type fun(ptr_id:any, flags:ImGuiTreeNodeFlags, fmt:string, args:va_list):boolean
    TreeNodeExV__1 = imgui.TreeNodeExV__1,
    ---@type fun(str_id:string):nil
    TreePush = imgui.TreePush,
    ---@param ptr_id any
    TreePush__1 = function(ptr_id)
        return imgui.TreePush__1(ptr_id)
    end,
    ---@type fun():nil
    TreePop = imgui.TreePop,
    ---@type fun():number
    GetTreeNodeToLabelSpacing = imgui.GetTreeNodeToLabelSpacing,
    ---@param label string
    ---@param flags ImGuiTreeNodeFlags
    CollapsingHeader = function(label, flags)
        flags = flags or 0
        return imgui.CollapsingHeader(label, flags)
    end,
    ---@param label string
    ---@param p_visible any
    ---@param flags ImGuiTreeNodeFlags
    CollapsingHeader__1 = function(label, p_visible, flags)
        flags = flags or 0
        return imgui.CollapsingHeader__1(label, p_visible, flags)
    end,
    ---@param is_open boolean
    ---@param cond ImGuiCond
    SetNextItemOpen = function(is_open, cond)
        cond = cond or 0
        return imgui.SetNextItemOpen(is_open, cond)
    end,
    ---@param label string
    ---@param selected boolean
    ---@param flags ImGuiSelectableFlags
    ---@param size any
    Selectable = function(label, selected, flags, size)
        selected = selected or false
        flags = flags or 0
        size = size or ffi.new('struct ImVec2')
        return imgui.Selectable(label, selected, flags, size)
    end,
    ---@param label string
    ---@param p_selected any
    ---@param flags ImGuiSelectableFlags
    ---@param size any
    Selectable__1 = function(label, p_selected, flags, size)
        flags = flags or 0
        size = size or ffi.new('struct ImVec2')
        return imgui.Selectable__1(label, p_selected, flags, size)
    end,
    ---@param label string
    ---@param size any
    BeginListBox = function(label, size)
        size = size or ffi.new('struct ImVec2')
        return imgui.BeginListBox(label, size)
    end,
    ---@type fun():nil
    EndListBox = imgui.EndListBox,
    ---@param label string
    ---@param current_item any
    ---@param items any
    ---@param items_count integer
    ---@param height_in_items integer
    ListBox = function(label, current_item, items, items_count, height_in_items)
        height_in_items = height_in_items or 1
        return imgui.ListBox(label, current_item, items, items_count, height_in_items)
    end,
    ---@param label string
    ---@param current_item any
    ---@param items_getter any
    ---@param data any
    ---@param items_count integer
    ---@param height_in_items integer
    ListBox__1 = function(label, current_item, items_getter, data, items_count, height_in_items)
        height_in_items = height_in_items or 1
        return imgui.ListBox__1(label, current_item, items_getter, data, items_count, height_in_items)
    end,
    ---@param label string
    ---@param values any
    ---@param values_count integer
    ---@param values_offset integer
    ---@param overlay_text string
    ---@param scale_min number
    ---@param scale_max number
    ---@param graph_size ImVec2
    ---@param stride integer
    PlotLines = function(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride)
        values_offset = values_offset or 0
        scale_min = scale_min or 3.402823466e+38
        scale_max = scale_max or 3.402823466e+38
        graph_size = graph_size or ffi.new('struct ImVec2')
        stride = stride or 4
        return imgui.PlotLines(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride)
    end,
    ---@param label string
    ---@param values_getter any
    ---@param data any
    ---@param values_count integer
    ---@param values_offset integer
    ---@param overlay_text string
    ---@param scale_min number
    ---@param scale_max number
    ---@param graph_size ImVec2
    PlotLines__1 = function(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size)
        values_offset = values_offset or 0
        scale_min = scale_min or 3.402823466e+38
        scale_max = scale_max or 3.402823466e+38
        graph_size = graph_size or ffi.new('struct ImVec2')
        return imgui.PlotLines__1(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size)
    end,
    ---@param label string
    ---@param values any
    ---@param values_count integer
    ---@param values_offset integer
    ---@param overlay_text string
    ---@param scale_min number
    ---@param scale_max number
    ---@param graph_size ImVec2
    ---@param stride integer
    PlotHistogram = function(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride)
        values_offset = values_offset or 0
        scale_min = scale_min or 3.402823466e+38
        scale_max = scale_max or 3.402823466e+38
        graph_size = graph_size or ffi.new('struct ImVec2')
        stride = stride or 4
        return imgui.PlotHistogram(label, values, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size, stride)
    end,
    ---@param label string
    ---@param values_getter any
    ---@param data any
    ---@param values_count integer
    ---@param values_offset integer
    ---@param overlay_text string
    ---@param scale_min number
    ---@param scale_max number
    ---@param graph_size ImVec2
    PlotHistogram__1 = function(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size)
        values_offset = values_offset or 0
        scale_min = scale_min or 3.402823466e+38
        scale_max = scale_max or 3.402823466e+38
        graph_size = graph_size or ffi.new('struct ImVec2')
        return imgui.PlotHistogram__1(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size)
    end,
    ---@type fun(prefix:string, b:boolean):nil
    Value = imgui.Value,
    ---@type fun(prefix:string, v:integer):nil
    Value__1 = imgui.Value__1,
    ---@type fun(prefix:string, v:integer):nil
    Value__2 = imgui.Value__2,
    ---@param prefix string
    ---@param v number
    ---@param float_format string
    Value__3 = function(prefix, v, float_format)
        return imgui.Value__3(prefix, v, float_format)
    end,
    ---@type fun():boolean
    BeginMenuBar = imgui.BeginMenuBar,
    ---@type fun():nil
    EndMenuBar = imgui.EndMenuBar,
    ---@type fun():boolean
    BeginMainMenuBar = imgui.BeginMainMenuBar,
    ---@type fun():nil
    EndMainMenuBar = imgui.EndMainMenuBar,
    ---@param label string
    ---@param enabled boolean
    BeginMenu = function(label, enabled)
        enabled = enabled or true
        return imgui.BeginMenu(label, enabled)
    end,
    ---@type fun():nil
    EndMenu = imgui.EndMenu,
    ---@param label string
    ---@param shortcut string
    ---@param selected boolean
    ---@param enabled boolean
    MenuItem = function(label, shortcut, selected, enabled)
        selected = selected or false
        enabled = enabled or true
        return imgui.MenuItem(label, shortcut, selected, enabled)
    end,
    ---@param label string
    ---@param shortcut string
    ---@param p_selected any
    ---@param enabled boolean
    MenuItem__1 = function(label, shortcut, p_selected, enabled)
        enabled = enabled or true
        return imgui.MenuItem__1(label, shortcut, p_selected, enabled)
    end,
    ---@type fun():nil
    BeginTooltip = imgui.BeginTooltip,
    ---@type fun():nil
    EndTooltip = imgui.EndTooltip,
    ---@type fun(fmt:string, ...):nil
    SetTooltip = imgui.SetTooltip,
    ---@type fun(fmt:string, args:va_list):nil
    SetTooltipV = imgui.SetTooltipV,
    ---@param str_id string
    ---@param flags ImGuiWindowFlags
    BeginPopup = function(str_id, flags)
        flags = flags or 0
        return imgui.BeginPopup(str_id, flags)
    end,
    ---@param name string
    ---@param p_open any
    ---@param flags ImGuiWindowFlags
    BeginPopupModal = function(name, p_open, flags)
        flags = flags or 0
        return imgui.BeginPopupModal(name, p_open, flags)
    end,
    ---@type fun():nil
    EndPopup = imgui.EndPopup,
    ---@param str_id string
    ---@param popup_flags ImGuiPopupFlags
    OpenPopup = function(str_id, popup_flags)
        popup_flags = popup_flags or 0
        return imgui.OpenPopup(str_id, popup_flags)
    end,
    ---@param id ImGuiID
    ---@param popup_flags ImGuiPopupFlags
    OpenPopup__1 = function(id, popup_flags)
        popup_flags = popup_flags or 0
        return imgui.OpenPopup__1(id, popup_flags)
    end,
    ---@param str_id string
    ---@param popup_flags ImGuiPopupFlags
    OpenPopupOnItemClick = function(str_id, popup_flags)
        popup_flags = popup_flags or 1
        return imgui.OpenPopupOnItemClick(str_id, popup_flags)
    end,
    ---@type fun():nil
    CloseCurrentPopup = imgui.CloseCurrentPopup,
    ---@param str_id string
    ---@param popup_flags ImGuiPopupFlags
    BeginPopupContextItem = function(str_id, popup_flags)
        popup_flags = popup_flags or 1
        return imgui.BeginPopupContextItem(str_id, popup_flags)
    end,
    ---@param str_id string
    ---@param popup_flags ImGuiPopupFlags
    BeginPopupContextWindow = function(str_id, popup_flags)
        popup_flags = popup_flags or 1
        return imgui.BeginPopupContextWindow(str_id, popup_flags)
    end,
    ---@param str_id string
    ---@param popup_flags ImGuiPopupFlags
    BeginPopupContextVoid = function(str_id, popup_flags)
        popup_flags = popup_flags or 1
        return imgui.BeginPopupContextVoid(str_id, popup_flags)
    end,
    ---@param str_id string
    ---@param flags ImGuiPopupFlags
    IsPopupOpen = function(str_id, flags)
        flags = flags or 0
        return imgui.IsPopupOpen(str_id, flags)
    end,
    ---@param str_id string
    ---@param column integer
    ---@param flags ImGuiTableFlags
    ---@param outer_size any
    ---@param inner_width number
    BeginTable = function(str_id, column, flags, outer_size, inner_width)
        flags = flags or 0
        outer_size = outer_size or ffi.new('struct ImVec2')
        inner_width = inner_width or 0.0
        return imgui.BeginTable(str_id, column, flags, outer_size, inner_width)
    end,
    ---@type fun():nil
    EndTable = imgui.EndTable,
    ---@param row_flags ImGuiTableRowFlags
    ---@param min_row_height number
    TableNextRow = function(row_flags, min_row_height)
        row_flags = row_flags or 0
        min_row_height = min_row_height or 0.0
        return imgui.TableNextRow(row_flags, min_row_height)
    end,
    ---@type fun():boolean
    TableNextColumn = imgui.TableNextColumn,
    ---@type fun(column_n:integer):boolean
    TableSetColumnIndex = imgui.TableSetColumnIndex,
    ---@param label string
    ---@param flags ImGuiTableColumnFlags
    ---@param init_width_or_weight number
    ---@param user_id ImGuiID
    TableSetupColumn = function(label, flags, init_width_or_weight, user_id)
        flags = flags or 0
        init_width_or_weight = init_width_or_weight or 0.0
        user_id = user_id or 0
        return imgui.TableSetupColumn(label, flags, init_width_or_weight, user_id)
    end,
    ---@type fun(cols:integer, rows:integer):nil
    TableSetupScrollFreeze = imgui.TableSetupScrollFreeze,
    ---@type fun():nil
    TableHeadersRow = imgui.TableHeadersRow,
    ---@type fun(label:string):nil
    TableHeader = imgui.TableHeader,
    ---@type fun():any
    TableGetSortSpecs = imgui.TableGetSortSpecs,
    ---@type fun():integer
    TableGetColumnCount = imgui.TableGetColumnCount,
    ---@type fun():integer
    TableGetColumnIndex = imgui.TableGetColumnIndex,
    ---@type fun():integer
    TableGetRowIndex = imgui.TableGetRowIndex,
    ---@param column_n integer
    TableGetColumnName = function(column_n)
        column_n = column_n or 1
        return imgui.TableGetColumnName(column_n)
    end,
    ---@param column_n integer
    TableGetColumnFlags = function(column_n)
        column_n = column_n or 1
        return imgui.TableGetColumnFlags(column_n)
    end,
    ---@type fun(column_n:integer, v:boolean):nil
    TableSetColumnEnabled = imgui.TableSetColumnEnabled,
    ---@param target ImGuiTableBgTarget
    ---@param color ImU32
    ---@param column_n integer
    TableSetBgColor = function(target, color, column_n)
        column_n = column_n or 1
        return imgui.TableSetBgColor(target, color, column_n)
    end,
    ---@param count integer
    ---@param id string
    ---@param border boolean
    Columns = function(count, id, border)
        count = count or 1
        border = border or true
        return imgui.Columns(count, id, border)
    end,
    ---@type fun():nil
    NextColumn = imgui.NextColumn,
    ---@type fun():integer
    GetColumnIndex = imgui.GetColumnIndex,
    ---@param column_index integer
    GetColumnWidth = function(column_index)
        column_index = column_index or 1
        return imgui.GetColumnWidth(column_index)
    end,
    ---@type fun(column_index:integer, width:number):nil
    SetColumnWidth = imgui.SetColumnWidth,
    ---@param column_index integer
    GetColumnOffset = function(column_index)
        column_index = column_index or 1
        return imgui.GetColumnOffset(column_index)
    end,
    ---@type fun(column_index:integer, offset_x:number):nil
    SetColumnOffset = imgui.SetColumnOffset,
    ---@type fun():integer
    GetColumnsCount = imgui.GetColumnsCount,
    ---@param str_id string
    ---@param flags ImGuiTabBarFlags
    BeginTabBar = function(str_id, flags)
        flags = flags or 0
        return imgui.BeginTabBar(str_id, flags)
    end,
    ---@type fun():nil
    EndTabBar = imgui.EndTabBar,
    ---@param label string
    ---@param p_open any
    ---@param flags ImGuiTabItemFlags
    BeginTabItem = function(label, p_open, flags)
        flags = flags or 0
        return imgui.BeginTabItem(label, p_open, flags)
    end,
    ---@type fun():nil
    EndTabItem = imgui.EndTabItem,
    ---@param label string
    ---@param flags ImGuiTabItemFlags
    TabItemButton = function(label, flags)
        flags = flags or 0
        return imgui.TabItemButton(label, flags)
    end,
    ---@type fun(tab_or_docked_window_label:string):nil
    SetTabItemClosed = imgui.SetTabItemClosed,
    ---@param id ImGuiID
    ---@param size any
    ---@param flags ImGuiDockNodeFlags
    ---@param window_class any
    DockSpace = function(id, size, flags, window_class)
        size = size or ffi.new('struct ImVec2')
        flags = flags or 0
        return imgui.DockSpace(id, size, flags, window_class)
    end,
    ---@param viewport any
    ---@param flags ImGuiDockNodeFlags
    ---@param window_class any
    DockSpaceOverViewport = function(viewport, flags, window_class)
        flags = flags or 0
        return imgui.DockSpaceOverViewport(viewport, flags, window_class)
    end,
    ---@param dock_id ImGuiID
    ---@param cond ImGuiCond
    SetNextWindowDockID = function(dock_id, cond)
        cond = cond or 0
        return imgui.SetNextWindowDockID(dock_id, cond)
    end,
    ---@type fun(window_class:any):nil
    SetNextWindowClass = imgui.SetNextWindowClass,
    ---@type fun():ImGuiID
    GetWindowDockID = imgui.GetWindowDockID,
    ---@type fun():boolean
    IsWindowDocked = imgui.IsWindowDocked,
    ---@param auto_open_depth integer
    LogToTTY = function(auto_open_depth)
        auto_open_depth = auto_open_depth or 1
        return imgui.LogToTTY(auto_open_depth)
    end,
    ---@param auto_open_depth integer
    ---@param filename string
    LogToFile = function(auto_open_depth, filename)
        auto_open_depth = auto_open_depth or 1
        return imgui.LogToFile(auto_open_depth, filename)
    end,
    ---@param auto_open_depth integer
    LogToClipboard = function(auto_open_depth)
        auto_open_depth = auto_open_depth or 1
        return imgui.LogToClipboard(auto_open_depth)
    end,
    ---@type fun():nil
    LogFinish = imgui.LogFinish,
    ---@type fun():nil
    LogButtons = imgui.LogButtons,
    ---@type fun(fmt:string, ...):nil
    LogText = imgui.LogText,
    ---@type fun(fmt:string, args:va_list):nil
    LogTextV = imgui.LogTextV,
    ---@param flags ImGuiDragDropFlags
    BeginDragDropSource = function(flags)
        flags = flags or 0
        return imgui.BeginDragDropSource(flags)
    end,
    ---@param type string
    ---@param data any
    ---@param sz size_t
    ---@param cond ImGuiCond
    SetDragDropPayload = function(type, data, sz, cond)
        cond = cond or 0
        return imgui.SetDragDropPayload(type, data, sz, cond)
    end,
    ---@type fun():nil
    EndDragDropSource = imgui.EndDragDropSource,
    ---@type fun():boolean
    BeginDragDropTarget = imgui.BeginDragDropTarget,
    ---@param type string
    ---@param flags ImGuiDragDropFlags
    AcceptDragDropPayload = function(type, flags)
        flags = flags or 0
        return imgui.AcceptDragDropPayload(type, flags)
    end,
    ---@type fun():nil
    EndDragDropTarget = imgui.EndDragDropTarget,
    ---@type fun():any
    GetDragDropPayload = imgui.GetDragDropPayload,
    ---@type fun(clip_rect_min:any, clip_rect_max:any, intersect_with_current_clip_rect:boolean):nil
    PushClipRect = imgui.PushClipRect,
    ---@type fun():nil
    PopClipRect = imgui.PopClipRect,
    ---@type fun():nil
    SetItemDefaultFocus = imgui.SetItemDefaultFocus,
    ---@param offset integer
    SetKeyboardFocusHere = function(offset)
        offset = offset or 0
        return imgui.SetKeyboardFocusHere(offset)
    end,
    ---@param flags ImGuiHoveredFlags
    IsItemHovered = function(flags)
        flags = flags or 0
        return imgui.IsItemHovered(flags)
    end,
    ---@type fun():boolean
    IsItemActive = imgui.IsItemActive,
    ---@type fun():boolean
    IsItemFocused = imgui.IsItemFocused,
    ---@param mouse_button ImGuiMouseButton
    IsItemClicked = function(mouse_button)
        mouse_button = mouse_button or 0
        return imgui.IsItemClicked(mouse_button)
    end,
    ---@type fun():boolean
    IsItemVisible = imgui.IsItemVisible,
    ---@type fun():boolean
    IsItemEdited = imgui.IsItemEdited,
    ---@type fun():boolean
    IsItemActivated = imgui.IsItemActivated,
    ---@type fun():boolean
    IsItemDeactivated = imgui.IsItemDeactivated,
    ---@type fun():boolean
    IsItemDeactivatedAfterEdit = imgui.IsItemDeactivatedAfterEdit,
    ---@type fun():boolean
    IsItemToggledOpen = imgui.IsItemToggledOpen,
    ---@type fun():boolean
    IsAnyItemHovered = imgui.IsAnyItemHovered,
    ---@type fun():boolean
    IsAnyItemActive = imgui.IsAnyItemActive,
    ---@type fun():boolean
    IsAnyItemFocused = imgui.IsAnyItemFocused,
    ---@type fun():ImVec2
    GetItemRectMin = imgui.GetItemRectMin,
    ---@type fun():ImVec2
    GetItemRectMax = imgui.GetItemRectMax,
    ---@type fun():ImVec2
    GetItemRectSize = imgui.GetItemRectSize,
    ---@type fun():nil
    SetItemAllowOverlap = imgui.SetItemAllowOverlap,
    ---@type fun():any
    GetMainViewport = imgui.GetMainViewport,
    ---@type fun(size:any):boolean
    IsRectVisible = imgui.IsRectVisible,
    ---@type fun(rect_min:any, rect_max:any):boolean
    IsRectVisible__1 = imgui.IsRectVisible__1,
    ---@type fun():number
    GetTime = imgui.GetTime,
    ---@type fun():integer
    GetFrameCount = imgui.GetFrameCount,
    ---@type fun():any
    GetBackgroundDrawList = imgui.GetBackgroundDrawList,
    ---@type fun(viewport:any):any
    GetBackgroundDrawList__1 = imgui.GetBackgroundDrawList__1,
    ---@type fun():any
    GetForegroundDrawList = imgui.GetForegroundDrawList,
    ---@type fun(viewport:any):any
    GetForegroundDrawList__1 = imgui.GetForegroundDrawList__1,
    ---@type fun():any
    GetDrawListSharedData = imgui.GetDrawListSharedData,
    ---@type fun(idx:ImGuiCol):string
    GetStyleColorName = imgui.GetStyleColorName,
    ---@type fun(storage:any):nil
    SetStateStorage = imgui.SetStateStorage,
    ---@type fun():any
    GetStateStorage = imgui.GetStateStorage,
    ---@type fun(items_count:integer, items_height:number, out_items_display_start:any, out_items_display_end:any):nil
    CalcListClipping = imgui.CalcListClipping,
    ---@param id ImGuiID
    ---@param size any
    ---@param flags ImGuiWindowFlags
    BeginChildFrame = function(id, size, flags)
        flags = flags or 0
        return imgui.BeginChildFrame(id, size, flags)
    end,
    ---@type fun():nil
    EndChildFrame = imgui.EndChildFrame,
    ---@param text string
    ---@param text_end string
    ---@param hide_text_after_double_hash boolean
    ---@param wrap_width number
    CalcTextSize = function(text, text_end, hide_text_after_double_hash, wrap_width)
        hide_text_after_double_hash = hide_text_after_double_hash or false
        wrap_width = wrap_width or 1.0
        return imgui.CalcTextSize(text, text_end, hide_text_after_double_hash, wrap_width)
    end,
    ---@type fun(in:ImU32):ImVec4
    ColorConvertU32ToFloat4 = imgui.ColorConvertU32ToFloat4,
    ---@type fun(in:any):ImU32
    ColorConvertFloat4ToU32 = imgui.ColorConvertFloat4ToU32,
    ---@type fun(r:number, g:number, b:number, out_h:any, out_s:any, out_v:any):nil
    ColorConvertRGBtoHSV = imgui.ColorConvertRGBtoHSV,
    ---@type fun(h:number, s:number, v:number, out_r:any, out_g:any, out_b:any):nil
    ColorConvertHSVtoRGB = imgui.ColorConvertHSVtoRGB,
    ---@type fun(imgui_key:ImGuiKey):integer
    GetKeyIndex = imgui.GetKeyIndex,
    ---@type fun(user_key_index:integer):boolean
    IsKeyDown = imgui.IsKeyDown,
    ---@param user_key_index integer
    ---@param repeat_ boolean
    IsKeyPressed = function(user_key_index, repeat_)
        repeat_ = repeat_ or true
        return imgui.IsKeyPressed(user_key_index, repeat_)
    end,
    ---@type fun(user_key_index:integer):boolean
    IsKeyReleased = imgui.IsKeyReleased,
    ---@type fun(key_index:integer, repeat_delay:number, rate:number):integer
    GetKeyPressedAmount = imgui.GetKeyPressedAmount,
    ---@param want_capture_keyboard_value boolean
    CaptureKeyboardFromApp = function(want_capture_keyboard_value)
        want_capture_keyboard_value = want_capture_keyboard_value or true
        return imgui.CaptureKeyboardFromApp(want_capture_keyboard_value)
    end,
    ---@type fun(button:ImGuiMouseButton):boolean
    IsMouseDown = imgui.IsMouseDown,
    ---@param button ImGuiMouseButton
    ---@param repeat_ boolean
    IsMouseClicked = function(button, repeat_)
        repeat_ = repeat_ or false
        return imgui.IsMouseClicked(button, repeat_)
    end,
    ---@type fun(button:ImGuiMouseButton):boolean
    IsMouseReleased = imgui.IsMouseReleased,
    ---@type fun(button:ImGuiMouseButton):boolean
    IsMouseDoubleClicked = imgui.IsMouseDoubleClicked,
    ---@param r_min any
    ---@param r_max any
    ---@param clip boolean
    IsMouseHoveringRect = function(r_min, r_max, clip)
        clip = clip or true
        return imgui.IsMouseHoveringRect(r_min, r_max, clip)
    end,
    ---@param mouse_pos any
    IsMousePosValid = function(mouse_pos)
        return imgui.IsMousePosValid(mouse_pos)
    end,
    ---@type fun():boolean
    IsAnyMouseDown = imgui.IsAnyMouseDown,
    ---@type fun():ImVec2
    GetMousePos = imgui.GetMousePos,
    ---@type fun():ImVec2
    GetMousePosOnOpeningCurrentPopup = imgui.GetMousePosOnOpeningCurrentPopup,
    ---@param button ImGuiMouseButton
    ---@param lock_threshold number
    IsMouseDragging = function(button, lock_threshold)
        lock_threshold = lock_threshold or 1.0
        return imgui.IsMouseDragging(button, lock_threshold)
    end,
    ---@param button ImGuiMouseButton
    ---@param lock_threshold number
    GetMouseDragDelta = function(button, lock_threshold)
        button = button or 0
        lock_threshold = lock_threshold or 1.0
        return imgui.GetMouseDragDelta(button, lock_threshold)
    end,
    ---@param button ImGuiMouseButton
    ResetMouseDragDelta = function(button)
        button = button or 0
        return imgui.ResetMouseDragDelta(button)
    end,
    ---@type fun():ImGuiMouseCursor
    GetMouseCursor = imgui.GetMouseCursor,
    ---@type fun(cursor_type:ImGuiMouseCursor):nil
    SetMouseCursor = imgui.SetMouseCursor,
    ---@param want_capture_mouse_value boolean
    CaptureMouseFromApp = function(want_capture_mouse_value)
        want_capture_mouse_value = want_capture_mouse_value or true
        return imgui.CaptureMouseFromApp(want_capture_mouse_value)
    end,
    ---@type fun():string
    GetClipboardText = imgui.GetClipboardText,
    ---@type fun(text:string):nil
    SetClipboardText = imgui.SetClipboardText,
    ---@type fun(ini_filename:string):nil
    LoadIniSettingsFromDisk = imgui.LoadIniSettingsFromDisk,
    ---@param ini_data string
    ---@param ini_size size_t
    LoadIniSettingsFromMemory = function(ini_data, ini_size)
        ini_size = ini_size or 0
        return imgui.LoadIniSettingsFromMemory(ini_data, ini_size)
    end,
    ---@type fun(ini_filename:string):nil
    SaveIniSettingsToDisk = imgui.SaveIniSettingsToDisk,
    ---@param out_ini_size any
    SaveIniSettingsToMemory = function(out_ini_size)
        return imgui.SaveIniSettingsToMemory(out_ini_size)
    end,
    ---@type fun(version_str:string, sz_io:size_t, sz_style:size_t, sz_vec2:size_t, sz_vec4:size_t, sz_drawvert:size_t, sz_drawidx:size_t):boolean
    DebugCheckVersionAndDataLayout = imgui.DebugCheckVersionAndDataLayout,
    ---@param alloc_func ImGuiMemAllocFunc
    ---@param free_func ImGuiMemFreeFunc
    ---@param user_data any
    SetAllocatorFunctions = function(alloc_func, free_func, user_data)
        return imgui.SetAllocatorFunctions(alloc_func, free_func, user_data)
    end,
    ---@type fun(p_alloc_func:any, p_free_func:any, p_user_data:any):nil
    GetAllocatorFunctions = imgui.GetAllocatorFunctions,
    ---@type fun(size:size_t):any
    MemAlloc = imgui.MemAlloc,
    ---@type fun(ptr:any):nil
    MemFree = imgui.MemFree,
    ---@type fun():any
    GetPlatformIO = imgui.GetPlatformIO,
    ---@type fun():nil
    UpdatePlatformWindows = imgui.UpdatePlatformWindows,
    ---@param platform_render_arg any
    ---@param renderer_render_arg any
    RenderPlatformWindowsDefault = function(platform_render_arg, renderer_render_arg)
        return imgui.RenderPlatformWindowsDefault(platform_render_arg, renderer_render_arg)
    end,
    ---@type fun():nil
    DestroyPlatformWindows = imgui.DestroyPlatformWindows,
    ---@type fun(id:ImGuiID):any
    FindViewportByID = imgui.FindViewportByID,
    ---@type fun(platform_handle:any):any
    FindViewportByPlatformHandle = imgui.FindViewportByPlatformHandle,
    ---@param label string
    ---@param items_count integer
    ---@param height_in_items integer
    ListBoxHeader = function(label, items_count, height_in_items)
        height_in_items = height_in_items or 1
        return imgui.ListBoxHeader(label, items_count, height_in_items)
    end,
    ---@type fun(this:any, scale_factor:number):nil
    ImGuiStyle_ScaleAllSizes = imgui.ImGuiStyle_ScaleAllSizes,
    ---@type fun(this:any, c:integer):nil
    ImGuiIO_AddInputCharacter = imgui.ImGuiIO_AddInputCharacter,
    ---@type fun(this:any, c:ImWchar16):nil
    ImGuiIO_AddInputCharacterUTF16 = imgui.ImGuiIO_AddInputCharacterUTF16,
    ---@type fun(this:any, str:string):nil
    ImGuiIO_AddInputCharactersUTF8 = imgui.ImGuiIO_AddInputCharactersUTF8,
    ---@type fun(this:any):nil
    ImGuiIO_ClearInputCharacters = imgui.ImGuiIO_ClearInputCharacters,
    ---@type fun(this:any, pos:integer, bytes_count:integer):nil
    ImGuiInputTextCallbackData_DeleteChars = imgui.ImGuiInputTextCallbackData_DeleteChars,
    ---@param this any
    ---@param pos integer
    ---@param text string
    ---@param text_end string
    ImGuiInputTextCallbackData_InsertChars = function(this, pos, text, text_end)
        return imgui.ImGuiInputTextCallbackData_InsertChars(this, pos, text, text_end)
    end,
    ---@param this any
    ---@param str string
    ---@param str_end string
    ImGuiTextBuffer_append = function(this, str, str_end)
        return imgui.ImGuiTextBuffer_append(this, str, str_end)
    end,
    ---@type fun(this:any, fmt:string, ...):nil
    ImGuiTextBuffer_appendf = imgui.ImGuiTextBuffer_appendf,
    ---@type fun(this:any, fmt:string, args:va_list):nil
    ImGuiTextBuffer_appendfv = imgui.ImGuiTextBuffer_appendfv,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val integer
    ImGuiStorage_GetInt = function(this, key, default_val)
        default_val = default_val or 0
        return imgui.ImGuiStorage_GetInt(this, key, default_val)
    end,
    ---@type fun(this:any, key:ImGuiID, val:integer):nil
    ImGuiStorage_SetInt = imgui.ImGuiStorage_SetInt,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val boolean
    ImGuiStorage_GetBool = function(this, key, default_val)
        default_val = default_val or false
        return imgui.ImGuiStorage_GetBool(this, key, default_val)
    end,
    ---@type fun(this:any, key:ImGuiID, val:boolean):nil
    ImGuiStorage_SetBool = imgui.ImGuiStorage_SetBool,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val number
    ImGuiStorage_GetFloat = function(this, key, default_val)
        default_val = default_val or 0.0
        return imgui.ImGuiStorage_GetFloat(this, key, default_val)
    end,
    ---@type fun(this:any, key:ImGuiID, val:number):nil
    ImGuiStorage_SetFloat = imgui.ImGuiStorage_SetFloat,
    ---@type fun(this:any, key:ImGuiID):any
    ImGuiStorage_GetVoidPtr = imgui.ImGuiStorage_GetVoidPtr,
    ---@type fun(this:any, key:ImGuiID, val:any):nil
    ImGuiStorage_SetVoidPtr = imgui.ImGuiStorage_SetVoidPtr,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val integer
    ImGuiStorage_GetIntRef = function(this, key, default_val)
        default_val = default_val or 0
        return imgui.ImGuiStorage_GetIntRef(this, key, default_val)
    end,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val boolean
    ImGuiStorage_GetBoolRef = function(this, key, default_val)
        default_val = default_val or false
        return imgui.ImGuiStorage_GetBoolRef(this, key, default_val)
    end,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val number
    ImGuiStorage_GetFloatRef = function(this, key, default_val)
        default_val = default_val or 0.0
        return imgui.ImGuiStorage_GetFloatRef(this, key, default_val)
    end,
    ---@param this any
    ---@param key ImGuiID
    ---@param default_val any
    ImGuiStorage_GetVoidPtrRef = function(this, key, default_val)
        return imgui.ImGuiStorage_GetVoidPtrRef(this, key, default_val)
    end,
    ---@type fun(this:any, val:integer):nil
    ImGuiStorage_SetAllInt = imgui.ImGuiStorage_SetAllInt,
    ---@type fun(this:any):nil
    ImGuiStorage_BuildSortByKey = imgui.ImGuiStorage_BuildSortByKey,
    ---@type fun(this:any):nil
    ImDrawListSplitter_ClearFreeMemory = imgui.ImDrawListSplitter_ClearFreeMemory,
    ---@type fun(this:any, draw_list:any, count:integer):nil
    ImDrawListSplitter_Split = imgui.ImDrawListSplitter_Split,
    ---@type fun(this:any, draw_list:any):nil
    ImDrawListSplitter_Merge = imgui.ImDrawListSplitter_Merge,
    ---@type fun(this:any, draw_list:any, channel_idx:integer):nil
    ImDrawListSplitter_SetCurrentChannel = imgui.ImDrawListSplitter_SetCurrentChannel,
    ---@param this any
    ---@param clip_rect_min ImVec2
    ---@param clip_rect_max ImVec2
    ---@param intersect_with_current_clip_rect boolean
    ImDrawList_PushClipRect = function(this, clip_rect_min, clip_rect_max, intersect_with_current_clip_rect)
        intersect_with_current_clip_rect = intersect_with_current_clip_rect or false
        return imgui.ImDrawList_PushClipRect(this, clip_rect_min, clip_rect_max, intersect_with_current_clip_rect)
    end,
    ---@type fun(this:any):nil
    ImDrawList_PushClipRectFullScreen = imgui.ImDrawList_PushClipRectFullScreen,
    ---@type fun(this:any):nil
    ImDrawList_PopClipRect = imgui.ImDrawList_PopClipRect,
    ---@type fun(this:any, texture_id:ImTextureID):nil
    ImDrawList_PushTextureID = imgui.ImDrawList_PushTextureID,
    ---@type fun(this:any):nil
    ImDrawList_PopTextureID = imgui.ImDrawList_PopTextureID,
    ---@param this any
    ---@param p1 any
    ---@param p2 any
    ---@param col ImU32
    ---@param thickness number
    ImDrawList_AddLine = function(this, p1, p2, col, thickness)
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddLine(this, p1, p2, col, thickness)
    end,
    ---@param this any
    ---@param p_min any
    ---@param p_max any
    ---@param col ImU32
    ---@param rounding number
    ---@param flags ImDrawFlags
    ---@param thickness number
    ImDrawList_AddRect = function(this, p_min, p_max, col, rounding, flags, thickness)
        rounding = rounding or 0.0
        flags = flags or 0
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddRect(this, p_min, p_max, col, rounding, flags, thickness)
    end,
    ---@param this any
    ---@param p_min any
    ---@param p_max any
    ---@param col ImU32
    ---@param rounding number
    ---@param flags ImDrawFlags
    ImDrawList_AddRectFilled = function(this, p_min, p_max, col, rounding, flags)
        rounding = rounding or 0.0
        flags = flags or 0
        return imgui.ImDrawList_AddRectFilled(this, p_min, p_max, col, rounding, flags)
    end,
    ---@type fun(this:any, p_min:any, p_max:any, col_upr_left:ImU32, col_upr_right:ImU32, col_bot_right:ImU32, col_bot_left:ImU32):nil
    ImDrawList_AddRectFilledMultiColor = imgui.ImDrawList_AddRectFilledMultiColor,
    ---@param this any
    ---@param p1 any
    ---@param p2 any
    ---@param p3 any
    ---@param p4 any
    ---@param col ImU32
    ---@param thickness number
    ImDrawList_AddQuad = function(this, p1, p2, p3, p4, col, thickness)
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddQuad(this, p1, p2, p3, p4, col, thickness)
    end,
    ---@type fun(this:any, p1:any, p2:any, p3:any, p4:any, col:ImU32):nil
    ImDrawList_AddQuadFilled = imgui.ImDrawList_AddQuadFilled,
    ---@param this any
    ---@param p1 any
    ---@param p2 any
    ---@param p3 any
    ---@param col ImU32
    ---@param thickness number
    ImDrawList_AddTriangle = function(this, p1, p2, p3, col, thickness)
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddTriangle(this, p1, p2, p3, col, thickness)
    end,
    ---@type fun(this:any, p1:any, p2:any, p3:any, col:ImU32):nil
    ImDrawList_AddTriangleFilled = imgui.ImDrawList_AddTriangleFilled,
    ---@param this any
    ---@param center any
    ---@param radius number
    ---@param col ImU32
    ---@param num_segments integer
    ---@param thickness number
    ImDrawList_AddCircle = function(this, center, radius, col, num_segments, thickness)
        num_segments = num_segments or 0
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddCircle(this, center, radius, col, num_segments, thickness)
    end,
    ---@param this any
    ---@param center any
    ---@param radius number
    ---@param col ImU32
    ---@param num_segments integer
    ImDrawList_AddCircleFilled = function(this, center, radius, col, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_AddCircleFilled(this, center, radius, col, num_segments)
    end,
    ---@param this any
    ---@param center any
    ---@param radius number
    ---@param col ImU32
    ---@param num_segments integer
    ---@param thickness number
    ImDrawList_AddNgon = function(this, center, radius, col, num_segments, thickness)
        thickness = thickness or 1.0
        return imgui.ImDrawList_AddNgon(this, center, radius, col, num_segments, thickness)
    end,
    ---@type fun(this:any, center:any, radius:number, col:ImU32, num_segments:integer):nil
    ImDrawList_AddNgonFilled = imgui.ImDrawList_AddNgonFilled,
    ---@param this any
    ---@param pos any
    ---@param col ImU32
    ---@param text_begin string
    ---@param text_end string
    ImDrawList_AddText = function(this, pos, col, text_begin, text_end)
        return imgui.ImDrawList_AddText(this, pos, col, text_begin, text_end)
    end,
    ---@param this any
    ---@param font any
    ---@param font_size number
    ---@param pos any
    ---@param col ImU32
    ---@param text_begin string
    ---@param text_end string
    ---@param wrap_width number
    ---@param cpu_fine_clip_rect any
    ImDrawList_AddText = function(this, font, font_size, pos, col, text_begin, text_end, wrap_width, cpu_fine_clip_rect)
        wrap_width = wrap_width or 0.0
        return imgui.ImDrawList_AddText(this, font, font_size, pos, col, text_begin, text_end, wrap_width, cpu_fine_clip_rect)
    end,
    ---@type fun(this:any, points:any, num_points:integer, col:ImU32, flags:ImDrawFlags, thickness:number):nil
    ImDrawList_AddPolyline = imgui.ImDrawList_AddPolyline,
    ---@type fun(this:any, points:any, num_points:integer, col:ImU32):nil
    ImDrawList_AddConvexPolyFilled = imgui.ImDrawList_AddConvexPolyFilled,
    ---@param this any
    ---@param p1 any
    ---@param p2 any
    ---@param p3 any
    ---@param p4 any
    ---@param col ImU32
    ---@param thickness number
    ---@param num_segments integer
    ImDrawList_AddBezierCubic = function(this, p1, p2, p3, p4, col, thickness, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_AddBezierCubic(this, p1, p2, p3, p4, col, thickness, num_segments)
    end,
    ---@param this any
    ---@param p1 any
    ---@param p2 any
    ---@param p3 any
    ---@param col ImU32
    ---@param thickness number
    ---@param num_segments integer
    ImDrawList_AddBezierQuadratic = function(this, p1, p2, p3, col, thickness, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_AddBezierQuadratic(this, p1, p2, p3, col, thickness, num_segments)
    end,
    ---@param this any
    ---@param user_texture_id ImTextureID
    ---@param p_min any
    ---@param p_max any
    ---@param uv_min any
    ---@param uv_max any
    ---@param col ImU32
    ImDrawList_AddImage = function(this, user_texture_id, p_min, p_max, uv_min, uv_max, col)
        uv_min = uv_min or ffi.new('struct ImVec2')
        uv_max = uv_max or ffi.new('struct ImVec2', 1, 1)
        col = col or IM_COL32_WHITE
        return imgui.ImDrawList_AddImage(this, user_texture_id, p_min, p_max, uv_min, uv_max, col)
    end,
    ---@param this any
    ---@param user_texture_id ImTextureID
    ---@param p1 any
    ---@param p2 any
    ---@param p3 any
    ---@param p4 any
    ---@param uv1 any
    ---@param uv2 any
    ---@param uv3 any
    ---@param uv4 any
    ---@param col ImU32
    ImDrawList_AddImageQuad = function(this, user_texture_id, p1, p2, p3, p4, uv1, uv2, uv3, uv4, col)
        uv1 = uv1 or ffi.new('struct ImVec2')
        uv2 = uv2 or ImVec2(1,0)
        uv3 = uv3 or ffi.new('struct ImVec2', 1, 1)
        uv4 = uv4 or ImVec2(0,1)
        col = col or IM_COL32_WHITE
        return imgui.ImDrawList_AddImageQuad(this, user_texture_id, p1, p2, p3, p4, uv1, uv2, uv3, uv4, col)
    end,
    ---@param this any
    ---@param user_texture_id ImTextureID
    ---@param p_min any
    ---@param p_max any
    ---@param uv_min any
    ---@param uv_max any
    ---@param col ImU32
    ---@param rounding number
    ---@param flags ImDrawFlags
    ImDrawList_AddImageRounded = function(this, user_texture_id, p_min, p_max, uv_min, uv_max, col, rounding, flags)
        flags = flags or 0
        return imgui.ImDrawList_AddImageRounded(this, user_texture_id, p_min, p_max, uv_min, uv_max, col, rounding, flags)
    end,
    ---@param this any
    ---@param center any
    ---@param radius number
    ---@param a_min number
    ---@param a_max number
    ---@param num_segments integer
    ImDrawList_PathArcTo = function(this, center, radius, a_min, a_max, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_PathArcTo(this, center, radius, a_min, a_max, num_segments)
    end,
    ---@type fun(this:any, center:any, radius:number, a_min_of_12:integer, a_max_of_12:integer):nil
    ImDrawList_PathArcToFast = imgui.ImDrawList_PathArcToFast,
    ---@param this any
    ---@param p2 any
    ---@param p3 any
    ---@param p4 any
    ---@param num_segments integer
    ImDrawList_PathBezierCubicCurveTo = function(this, p2, p3, p4, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_PathBezierCubicCurveTo(this, p2, p3, p4, num_segments)
    end,
    ---@param this any
    ---@param p2 any
    ---@param p3 any
    ---@param num_segments integer
    ImDrawList_PathBezierQuadraticCurveTo = function(this, p2, p3, num_segments)
        num_segments = num_segments or 0
        return imgui.ImDrawList_PathBezierQuadraticCurveTo(this, p2, p3, num_segments)
    end,
    ---@param this any
    ---@param rect_min any
    ---@param rect_max any
    ---@param rounding number
    ---@param flags ImDrawFlags
    ImDrawList_PathRect = function(this, rect_min, rect_max, rounding, flags)
        rounding = rounding or 0.0
        flags = flags or 0
        return imgui.ImDrawList_PathRect(this, rect_min, rect_max, rounding, flags)
    end,
    ---@type fun(this:any, callback:ImDrawCallback, callback_data:any):nil
    ImDrawList_AddCallback = imgui.ImDrawList_AddCallback,
    ---@type fun(this:any):nil
    ImDrawList_AddDrawCmd = imgui.ImDrawList_AddDrawCmd,
    ---@type fun(this:any):any
    ImDrawList_CloneOutput = imgui.ImDrawList_CloneOutput,
    ---@type fun(this:any, idx_count:integer, vtx_count:integer):nil
    ImDrawList_PrimReserve = imgui.ImDrawList_PrimReserve,
    ---@type fun(this:any, idx_count:integer, vtx_count:integer):nil
    ImDrawList_PrimUnreserve = imgui.ImDrawList_PrimUnreserve,
    ---@type fun(this:any, a:any, b:any, col:ImU32):nil
    ImDrawList_PrimRect = imgui.ImDrawList_PrimRect,
    ---@type fun(this:any, a:any, b:any, uv_a:any, uv_b:any, col:ImU32):nil
    ImDrawList_PrimRectUV = imgui.ImDrawList_PrimRectUV,
    ---@type fun(this:any, a:any, b:any, c:any, d:any, uv_a:any, uv_b:any, uv_c:any, uv_d:any, col:ImU32):nil
    ImDrawList_PrimQuadUV = imgui.ImDrawList_PrimQuadUV,
    ---@type fun(this:any):nil
    ImDrawList__ResetForNewFrame = imgui.ImDrawList__ResetForNewFrame,
    ---@type fun(this:any):nil
    ImDrawList__ClearFreeMemory = imgui.ImDrawList__ClearFreeMemory,
    ---@type fun(this:any):nil
    ImDrawList__PopUnusedDrawCmd = imgui.ImDrawList__PopUnusedDrawCmd,
    ---@type fun(this:any):nil
    ImDrawList__TryMergeDrawCmds = imgui.ImDrawList__TryMergeDrawCmds,
    ---@type fun(this:any):nil
    ImDrawList__OnChangedClipRect = imgui.ImDrawList__OnChangedClipRect,
    ---@type fun(this:any):nil
    ImDrawList__OnChangedTextureID = imgui.ImDrawList__OnChangedTextureID,
    ---@type fun(this:any):nil
    ImDrawList__OnChangedVtxOffset = imgui.ImDrawList__OnChangedVtxOffset,
    ---@type fun(this:any, radius:number):integer
    ImDrawList__CalcCircleAutoSegmentCount = imgui.ImDrawList__CalcCircleAutoSegmentCount,
    ---@type fun(this:any, center:any, radius:number, a_min_sample:integer, a_max_sample:integer, a_step:integer):nil
    ImDrawList__PathArcToFastEx = imgui.ImDrawList__PathArcToFastEx,
    ---@type fun(this:any, center:any, radius:number, a_min:number, a_max:number, num_segments:integer):nil
    ImDrawList__PathArcToN = imgui.ImDrawList__PathArcToN,
    ---@type fun(this:any):nil
    ImDrawData_DeIndexAllBuffers = imgui.ImDrawData_DeIndexAllBuffers,
    ---@type fun(this:any, fb_scale:any):nil
    ImDrawData_ScaleClipRects = imgui.ImDrawData_ScaleClipRects,
    ---@type fun(this:any, font_cfg:any):any
    ImFontAtlas_AddFont = imgui.ImFontAtlas_AddFont,
    ---@param this any
    ---@param font_cfg any
    ImFontAtlas_AddFontDefault = function(this, font_cfg)
        return imgui.ImFontAtlas_AddFontDefault(this, font_cfg)
    end,
    ---@param this any
    ---@param filename string
    ---@param size_pixels number
    ---@param font_cfg any
    ---@param glyph_ranges any
    ImFontAtlas_AddFontFromFileTTF = function(this, filename, size_pixels, font_cfg, glyph_ranges)
        return imgui.ImFontAtlas_AddFontFromFileTTF(this, filename, size_pixels, font_cfg, glyph_ranges)
    end,
    ---@param this any
    ---@param font_data any
    ---@param font_size integer
    ---@param size_pixels number
    ---@param font_cfg any
    ---@param glyph_ranges any
    ImFontAtlas_AddFontFromMemoryTTF = function(this, font_data, font_size, size_pixels, font_cfg, glyph_ranges)
        return imgui.ImFontAtlas_AddFontFromMemoryTTF(this, font_data, font_size, size_pixels, font_cfg, glyph_ranges)
    end,
    ---@param this any
    ---@param compressed_font_data any
    ---@param compressed_font_size integer
    ---@param size_pixels number
    ---@param font_cfg any
    ---@param glyph_ranges any
    ImFontAtlas_AddFontFromMemoryCompressedTTF = function(this, compressed_font_data, compressed_font_size, size_pixels, font_cfg, glyph_ranges)
        return imgui.ImFontAtlas_AddFontFromMemoryCompressedTTF(this, compressed_font_data, compressed_font_size, size_pixels, font_cfg, glyph_ranges)
    end,
    ---@param this any
    ---@param compressed_font_data_base85 string
    ---@param size_pixels number
    ---@param font_cfg any
    ---@param glyph_ranges any
    ImFontAtlas_AddFontFromMemoryCompressedBase85TTF = function(this, compressed_font_data_base85, size_pixels, font_cfg, glyph_ranges)
        return imgui.ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(this, compressed_font_data_base85, size_pixels, font_cfg, glyph_ranges)
    end,
    ---@type fun(this:any):nil
    ImFontAtlas_ClearInputData = imgui.ImFontAtlas_ClearInputData,
    ---@type fun(this:any):nil
    ImFontAtlas_ClearTexData = imgui.ImFontAtlas_ClearTexData,
    ---@type fun(this:any):nil
    ImFontAtlas_ClearFonts = imgui.ImFontAtlas_ClearFonts,
    ---@type fun(this:any):nil
    ImFontAtlas_Clear = imgui.ImFontAtlas_Clear,
    ---@type fun(this:any):boolean
    ImFontAtlas_Build = imgui.ImFontAtlas_Build,
    ---@param this any
    ---@param out_pixels any
    ---@param out_width any
    ---@param out_height any
    ---@param out_bytes_per_pixel any
    ImFontAtlas_GetTexDataAsAlpha8 = function(this, out_pixels, out_width, out_height, out_bytes_per_pixel)
        return imgui.ImFontAtlas_GetTexDataAsAlpha8(this, out_pixels, out_width, out_height, out_bytes_per_pixel)
    end,
    ---@param this any
    ---@param out_pixels any
    ---@param out_width any
    ---@param out_height any
    ---@param out_bytes_per_pixel any
    ImFontAtlas_GetTexDataAsRGBA32 = function(this, out_pixels, out_width, out_height, out_bytes_per_pixel)
        return imgui.ImFontAtlas_GetTexDataAsRGBA32(this, out_pixels, out_width, out_height, out_bytes_per_pixel)
    end,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesDefault = imgui.ImFontAtlas_GetGlyphRangesDefault,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesKorean = imgui.ImFontAtlas_GetGlyphRangesKorean,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesJapanese = imgui.ImFontAtlas_GetGlyphRangesJapanese,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesChineseFull = imgui.ImFontAtlas_GetGlyphRangesChineseFull,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon = imgui.ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesCyrillic = imgui.ImFontAtlas_GetGlyphRangesCyrillic,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesThai = imgui.ImFontAtlas_GetGlyphRangesThai,
    ---@type fun(this:any):any
    ImFontAtlas_GetGlyphRangesVietnamese = imgui.ImFontAtlas_GetGlyphRangesVietnamese,
    ---@type fun(this:any, width:integer, height:integer):integer
    ImFontAtlas_AddCustomRectRegular = imgui.ImFontAtlas_AddCustomRectRegular,
    ---@param this any
    ---@param font any
    ---@param id ImWchar
    ---@param width integer
    ---@param height integer
    ---@param advance_x number
    ---@param offset any
    ImFontAtlas_AddCustomRectFontGlyph = function(this, font, id, width, height, advance_x, offset)
        offset = offset or ffi.new('struct ImVec2')
        return imgui.ImFontAtlas_AddCustomRectFontGlyph(this, font, id, width, height, advance_x, offset)
    end,
    ---@type fun(this:any, rect:any, out_uv_min:any, out_uv_max:any):nil
    ImFontAtlas_CalcCustomRectUV = imgui.ImFontAtlas_CalcCustomRectUV,
    ---@type fun(this:any, cursor:ImGuiMouseCursor, out_offset:any, out_size:any, out_uv_border:ImVec2, out_uv_fill:ImVec2):boolean
    ImFontAtlas_GetMouseCursorTexData = imgui.ImFontAtlas_GetMouseCursorTexData,
    ---@type fun(this:any, c:ImWchar):any
    ImFont_FindGlyph = imgui.ImFont_FindGlyph,
    ---@type fun(this:any, c:ImWchar):any
    ImFont_FindGlyphNoFallback = imgui.ImFont_FindGlyphNoFallback,
    ---@param this any
    ---@param size number
    ---@param max_width number
    ---@param wrap_width number
    ---@param text_begin string
    ---@param text_end string
    ---@param remaining any
    ImFont_CalcTextSizeA = function(this, size, max_width, wrap_width, text_begin, text_end, remaining)
        return imgui.ImFont_CalcTextSizeA(this, size, max_width, wrap_width, text_begin, text_end, remaining)
    end,
    ---@type fun(this:any, scale:number, text:string, text_end:string, wrap_width:number):string
    ImFont_CalcWordWrapPositionA = imgui.ImFont_CalcWordWrapPositionA,
    ---@type fun(this:any, draw_list:any, size:number, pos:ImVec2, col:ImU32, c:ImWchar):nil
    ImFont_RenderChar = imgui.ImFont_RenderChar,
    ---@param this any
    ---@param draw_list any
    ---@param size number
    ---@param pos ImVec2
    ---@param col ImU32
    ---@param clip_rect any
    ---@param text_begin string
    ---@param text_end string
    ---@param wrap_width number
    ---@param cpu_fine_clip boolean
    ImFont_RenderText = function(this, draw_list, size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip)
        wrap_width = wrap_width or 0.0
        cpu_fine_clip = cpu_fine_clip or false
        return imgui.ImFont_RenderText(this, draw_list, size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip)
    end,
    ---@type fun(this:any):nil
    ImFont_BuildLookupTable = imgui.ImFont_BuildLookupTable,
    ---@type fun(this:any):nil
    ImFont_ClearOutputData = imgui.ImFont_ClearOutputData,
    ---@type fun(this:any, new_size:integer):nil
    ImFont_GrowIndex = imgui.ImFont_GrowIndex,
    ---@type fun(this:any, src_cfg:any, c:ImWchar, x0:number, y0:number, x1:number, y1:number, u0:number, v0:number, u1:number, v1:number, advance_x:number):nil
    ImFont_AddGlyph = imgui.ImFont_AddGlyph,
    ---@param this any
    ---@param dst ImWchar
    ---@param src ImWchar
    ---@param overwrite_dst boolean
    ImFont_AddRemapChar = function(this, dst, src, overwrite_dst)
        overwrite_dst = overwrite_dst or true
        return imgui.ImFont_AddRemapChar(this, dst, src, overwrite_dst)
    end,
    ---@type fun(this:any, c:ImWchar, visible:boolean):nil
    ImFont_SetGlyphVisible = imgui.ImFont_SetGlyphVisible,
    ---@type fun(this:any, c_begin:integer, c_last:integer):boolean
    ImFont_IsGlyphRangeUnused = imgui.ImFont_IsGlyphRangeUnused,
    ---@type fun(ctx:any):nil
    DockContextInitialize = imgui.DockContextInitialize,
    ---@type fun(ctx:any):nil
    DockContextShutdown = imgui.DockContextShutdown,
    ---@type fun(ctx:any, root_id:ImGuiID, clear_settings_refs:boolean):nil
    DockContextClearNodes = imgui.DockContextClearNodes,
    ---@type fun(ctx:any):nil
    DockContextRebuildNodes = imgui.DockContextRebuildNodes,
    ---@type fun(ctx:any):nil
    DockContextNewFrameUpdateUndocking = imgui.DockContextNewFrameUpdateUndocking,
    ---@type fun(ctx:any):nil
    DockContextNewFrameUpdateDocking = imgui.DockContextNewFrameUpdateDocking,
    ---@type fun(ctx:any):ImGuiID
    DockContextGenNodeID = imgui.DockContextGenNodeID,
    ---@type fun(ctx:any, target:any, target_node:any, payload:any, split_dir:ImGuiDir, split_ratio:number, split_outer:boolean):nil
    DockContextQueueDock = imgui.DockContextQueueDock,
    ---@type fun(ctx:any, window:any):nil
    DockContextQueueUndockWindow = imgui.DockContextQueueUndockWindow,
    ---@type fun(ctx:any, node:any):nil
    DockContextQueueUndockNode = imgui.DockContextQueueUndockNode,
    ---@type fun(target:any, target_node:any, payload:any, split_dir:ImGuiDir, split_outer:boolean, out_pos:any):boolean
    DockContextCalcDropPosForDocking = imgui.DockContextCalcDropPosForDocking,
    ---@type fun(node:any):boolean
    DockNodeBeginAmendTabBar = imgui.DockNodeBeginAmendTabBar,
    ---@type fun():nil
    DockNodeEndAmendTabBar = imgui.DockNodeEndAmendTabBar,
    ---@type fun(window:any, p_open:any):nil
    BeginDocked = imgui.BeginDocked,
    ---@type fun(window:any):nil
    BeginDockableDragDropSource = imgui.BeginDockableDragDropSource,
    ---@type fun(window:any):nil
    BeginDockableDragDropTarget = imgui.BeginDockableDragDropTarget,
    ---@type fun(window:any, dock_id:ImGuiID, cond:ImGuiCond):nil
    SetWindowDock = imgui.SetWindowDock,
    ---@type fun(window_name:string, node_id:ImGuiID):nil
    DockBuilderDockWindow = imgui.DockBuilderDockWindow,
    ---@type fun(node_id:ImGuiID):any
    DockBuilderGetNode = imgui.DockBuilderGetNode,
    ---@param node_id ImGuiID
    ---@param flags ImGuiDockNodeFlags
    DockBuilderAddNode = function(node_id, flags)
        node_id = node_id or 0
        flags = flags or 0
        return imgui.DockBuilderAddNode(node_id, flags)
    end,
    ---@type fun(node_id:ImGuiID):nil
    DockBuilderRemoveNode = imgui.DockBuilderRemoveNode,
    ---@param node_id ImGuiID
    ---@param clear_settings_refs boolean
    DockBuilderRemoveNodeDockedWindows = function(node_id, clear_settings_refs)
        clear_settings_refs = clear_settings_refs or true
        return imgui.DockBuilderRemoveNodeDockedWindows(node_id, clear_settings_refs)
    end,
    ---@type fun(node_id:ImGuiID):nil
    DockBuilderRemoveNodeChildNodes = imgui.DockBuilderRemoveNodeChildNodes,
    ---@type fun(node_id:ImGuiID, pos:ImVec2):nil
    DockBuilderSetNodePos = imgui.DockBuilderSetNodePos,
    ---@type fun(node_id:ImGuiID, size:ImVec2):nil
    DockBuilderSetNodeSize = imgui.DockBuilderSetNodeSize,
    ---@type fun(node_id:ImGuiID, split_dir:ImGuiDir, size_ratio_for_node_at_dir:number, out_id_at_dir:any, out_id_at_opposite_dir:any):ImGuiID
    DockBuilderSplitNode = imgui.DockBuilderSplitNode,
    ---@type fun(src_dockspace_id:ImGuiID, dst_dockspace_id:ImGuiID, in_window_remap_pairs:any):nil
    DockBuilderCopyDockSpace = imgui.DockBuilderCopyDockSpace,
    ---@type fun(src_node_id:ImGuiID, dst_node_id:ImGuiID, out_node_remap_pairs:any):nil
    DockBuilderCopyNode = imgui.DockBuilderCopyNode,
    ---@type fun(src_name:string, dst_name:string):nil
    DockBuilderCopyWindowSettings = imgui.DockBuilderCopyWindowSettings,
    ---@type fun(node_id:ImGuiID):nil
    DockBuilderFinish = imgui.DockBuilderFinish,
    ---@type fun(draw_list:any, p_min:ImVec2, sz:number, col:ImU32):nil
    RenderArrowDockMenu = imgui.RenderArrowDockMenu,
    ---@type fun(node:any, label:string):nil
    DebugNodeDockNode = imgui.DebugNodeDockNode,
    ---@type fun(this:any):ImVec2
    ImRect_GetCenter = imgui.ImRect_GetCenter,
    ---@type fun(this:any):ImVec2
    ImRect_GetSize = imgui.ImRect_GetSize,
    ---@type fun(this:any):number
    ImRect_GetWidth = imgui.ImRect_GetWidth,
    ---@type fun(this:any):number
    ImRect_GetHeight = imgui.ImRect_GetHeight,
    ---@type fun(this:any):number
    ImRect_GetArea = imgui.ImRect_GetArea,
    ---@type fun(this:any):ImVec2
    ImRect_GetTL = imgui.ImRect_GetTL,
    ---@type fun(this:any):ImVec2
    ImRect_GetTR = imgui.ImRect_GetTR,
    ---@type fun(this:any):ImVec2
    ImRect_GetBL = imgui.ImRect_GetBL,
    ---@type fun(this:any):ImVec2
    ImRect_GetBR = imgui.ImRect_GetBR,
    ---@type fun(this:any, p:any):boolean
    ImRect_Contains = imgui.ImRect_Contains,
    ---@type fun(this:any, r:any):boolean
    ImRect_Contains = imgui.ImRect_Contains,
    ---@type fun(this:any, r:any):boolean
    ImRect_Overlaps = imgui.ImRect_Overlaps,
    ---@type fun(this:any, p:any):nil
    ImRect_Add = imgui.ImRect_Add,
    ---@type fun(this:any, r:any):nil
    ImRect_Add = imgui.ImRect_Add,
    ---@type fun(this:any, amount:number):nil
    ImRect_Expand = imgui.ImRect_Expand,
    ---@type fun(this:any, amount:any):nil
    ImRect_Expand = imgui.ImRect_Expand,
    ---@type fun(this:any, d:any):nil
    ImRect_Translate = imgui.ImRect_Translate,
    ---@type fun(this:any, dx:number):nil
    ImRect_TranslateX = imgui.ImRect_TranslateX,
    ---@type fun(this:any, dy:number):nil
    ImRect_TranslateY = imgui.ImRect_TranslateY,
    ---@type fun(this:any, r:any):nil
    ImRect_ClipWith = imgui.ImRect_ClipWith,
    ---@type fun(this:any, r:any):nil
    ImRect_ClipWithFull = imgui.ImRect_ClipWithFull,
    ---@type fun(this:any):nil
    ImRect_Floor = imgui.ImRect_Floor,
    ---@type fun(this:any):boolean
    ImRect_IsInverted = imgui.ImRect_IsInverted,
    ---@type fun(this:any):ImVec4
    ImRect_ToVec4 = imgui.ImRect_ToVec4,
    ---@type fun(this:any, max_error:number):nil
    ImDrawListSharedData_SetCircleTessellationMaxError = imgui.ImDrawListSharedData_SetCircleTessellationMaxError,
    ---@type fun(this:any):nil
    ImDrawDataBuilder_FlattenIntoSingleLayer = imgui.ImDrawDataBuilder_FlattenIntoSingleLayer,
    ---@type fun(this:any, spacing:number, window_reappearing:boolean):nil
    ImGuiMenuColumns_Update = imgui.ImGuiMenuColumns_Update,
    ---@type fun(this:any, w_icon:number, w_label:number, w_shortcut:number, w_mark:number):number
    ImGuiMenuColumns_DeclColumns = imgui.ImGuiMenuColumns_DeclColumns,
    ---@type fun(this:any, update_offsets:boolean):nil
    ImGuiMenuColumns_CalcNextTotalWidth = imgui.ImGuiMenuColumns_CalcNextTotalWidth,
    ---@type fun(this:any):nil
    ImGuiInputTextState_ClearText = imgui.ImGuiInputTextState_ClearText,
    ---@type fun(this:any):nil
    ImGuiInputTextState_ClearFreeMemory = imgui.ImGuiInputTextState_ClearFreeMemory,
    ---@type fun(this:any):integer
    ImGuiInputTextState_GetUndoAvailCount = imgui.ImGuiInputTextState_GetUndoAvailCount,
    ---@type fun(this:any):integer
    ImGuiInputTextState_GetRedoAvailCount = imgui.ImGuiInputTextState_GetRedoAvailCount,
    ---@type fun(this:any, key:integer):nil
    ImGuiInputTextState_OnKeyPressed = imgui.ImGuiInputTextState_OnKeyPressed,
    ---@type fun(this:any):nil
    ImGuiInputTextState_CursorAnimReset = imgui.ImGuiInputTextState_CursorAnimReset,
    ---@type fun(this:any):nil
    ImGuiInputTextState_CursorClamp = imgui.ImGuiInputTextState_CursorClamp,
    ---@type fun(this:any):boolean
    ImGuiInputTextState_HasSelection = imgui.ImGuiInputTextState_HasSelection,
    ---@type fun(this:any):nil
    ImGuiInputTextState_ClearSelection = imgui.ImGuiInputTextState_ClearSelection,
    ---@type fun(this:any):integer
    ImGuiInputTextState_GetCursorPos = imgui.ImGuiInputTextState_GetCursorPos,
    ---@type fun(this:any):integer
    ImGuiInputTextState_GetSelectionStart = imgui.ImGuiInputTextState_GetSelectionStart,
    ---@type fun(this:any):integer
    ImGuiInputTextState_GetSelectionEnd = imgui.ImGuiInputTextState_GetSelectionEnd,
    ---@type fun(this:any):nil
    ImGuiInputTextState_SelectAll = imgui.ImGuiInputTextState_SelectAll,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsRootNode = imgui.ImGuiDockNode_IsRootNode,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsDockSpace = imgui.ImGuiDockNode_IsDockSpace,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsFloatingNode = imgui.ImGuiDockNode_IsFloatingNode,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsCentralNode = imgui.ImGuiDockNode_IsCentralNode,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsHiddenTabBar = imgui.ImGuiDockNode_IsHiddenTabBar,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsNoTabBar = imgui.ImGuiDockNode_IsNoTabBar,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsSplitNode = imgui.ImGuiDockNode_IsSplitNode,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsLeafNode = imgui.ImGuiDockNode_IsLeafNode,
    ---@type fun(this:any):boolean
    ImGuiDockNode_IsEmpty = imgui.ImGuiDockNode_IsEmpty,
    ---@type fun(this:any):ImRect
    ImGuiDockNode_Rect = imgui.ImGuiDockNode_Rect,
    ---@type fun(this:any, flags:ImGuiDockNodeFlags):nil
    ImGuiDockNode_SetLocalFlags = imgui.ImGuiDockNode_SetLocalFlags,
    ---@type fun(this:any):nil
    ImGuiDockNode_UpdateMergedFlags = imgui.ImGuiDockNode_UpdateMergedFlags,
    ---@type fun(this:any):nil
    ImGuiStackSizes_SetToCurrentState = imgui.ImGuiStackSizes_SetToCurrentState,
    ---@type fun(this:any):nil
    ImGuiStackSizes_CompareWithCurrentState = imgui.ImGuiStackSizes_CompareWithCurrentState,
    ---@param this any
    ---@param str string
    ---@param str_end string
    ImGuiWindow_GetID = function(this, str, str_end)
        return imgui.ImGuiWindow_GetID(this, str, str_end)
    end,
    ---@type fun(this:any, ptr:any):ImGuiID
    ImGuiWindow_GetID = imgui.ImGuiWindow_GetID,
    ---@type fun(this:any, n:integer):ImGuiID
    ImGuiWindow_GetID = imgui.ImGuiWindow_GetID,
    ---@param this any
    ---@param str string
    ---@param str_end string
    ImGuiWindow_GetIDNoKeepAlive = function(this, str, str_end)
        return imgui.ImGuiWindow_GetIDNoKeepAlive(this, str, str_end)
    end,
    ---@type fun(this:any, ptr:any):ImGuiID
    ImGuiWindow_GetIDNoKeepAlive = imgui.ImGuiWindow_GetIDNoKeepAlive,
    ---@type fun(this:any, n:integer):ImGuiID
    ImGuiWindow_GetIDNoKeepAlive = imgui.ImGuiWindow_GetIDNoKeepAlive,
    ---@type fun(this:any, r_abs:any):ImGuiID
    ImGuiWindow_GetIDFromRectangle = imgui.ImGuiWindow_GetIDFromRectangle,
    ---@type fun(this:any):ImRect
    ImGuiWindow_Rect = imgui.ImGuiWindow_Rect,
    ---@type fun(this:any):number
    ImGuiWindow_CalcFontSize = imgui.ImGuiWindow_CalcFontSize,
    ---@type fun(this:any):number
    ImGuiWindow_TitleBarHeight = imgui.ImGuiWindow_TitleBarHeight,
    ---@type fun(this:any):ImRect
    ImGuiWindow_TitleBarRect = imgui.ImGuiWindow_TitleBarRect,
    ---@type fun(this:any):number
    ImGuiWindow_MenuBarHeight = imgui.ImGuiWindow_MenuBarHeight,
    ---@type fun(this:any):ImRect
    ImGuiWindow_MenuBarRect = imgui.ImGuiWindow_MenuBarRect,
    ---@type fun(this:any, tab:any):integer
    ImGuiTabBar_GetTabOrder = imgui.ImGuiTabBar_GetTabOrder,
    ---@type fun(this:any, tab:any):string
    ImGuiTabBar_GetTabName = imgui.ImGuiTabBar_GetTabName,
    ---@param glsl_version string
    ImGui_ImplOpenGL3_Init = function(glsl_version)
        return imgui.ImGui_ImplOpenGL3_Init(glsl_version)
    end,
    ---@type fun():nil
    ImGui_ImplOpenGL3_Shutdown = imgui.ImGui_ImplOpenGL3_Shutdown,
    ---@type fun():nil
    ImGui_ImplOpenGL3_NewFrame = imgui.ImGui_ImplOpenGL3_NewFrame,
    ---@type fun(draw_data:any):nil
    ImGui_ImplOpenGL3_RenderDrawData = imgui.ImGui_ImplOpenGL3_RenderDrawData,
    ---@type fun():boolean
    ImGui_ImplOpenGL3_CreateFontsTexture = imgui.ImGui_ImplOpenGL3_CreateFontsTexture,
    ---@type fun():nil
    ImGui_ImplOpenGL3_DestroyFontsTexture = imgui.ImGui_ImplOpenGL3_DestroyFontsTexture,
    ---@type fun():boolean
    ImGui_ImplOpenGL3_CreateDeviceObjects = imgui.ImGui_ImplOpenGL3_CreateDeviceObjects,
    ---@type fun():nil
    ImGui_ImplOpenGL3_DestroyDeviceObjects = imgui.ImGui_ImplOpenGL3_DestroyDeviceObjects,
}
-----------------------------------------------------------------------------
-- glad.dll
-----------------------------------------------------------------------------
---@type Table<string, any>
local glad = ffi.load('glad')
M.cache.glad = glad
M.libs.glad = {
    ---@type fun(load:GLADuserptrloadfunc, userptr:any):integer
    gladLoadGLUserPtr = glad.gladLoadGLUserPtr,
    ---@type fun(load:GLADloadfunc):integer
    gladLoadGL = glad.gladLoadGL,
}
return M
